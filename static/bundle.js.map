{"version":3,"sources":["webpack:///webpack/bootstrap e45bcf8616327c88cf88","webpack:///./src/js/utils/constant.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./src/js/utils/utils.js","webpack:///./node_modules/gl-matrix/src/gl-matrix.js","webpack:///./src/js/Entity/tower/BaseTower.js","webpack:///./src/js/id.js","webpack:///./src/js/utils/config.js","webpack:///./src/js/Entity/tower/index.js","webpack:///./src/index.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./src/js/EntityCollection.js","webpack:///./src/js/Game.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///./src/js/Entity/bullet/CircleBullet.js","webpack:///./src/js/Entity/tower/BulletTower.js","webpack:///./src/js/Entity/bullet/Bullet.js","webpack:///./src/js/Entity/tower/LaserTower.js","webpack:///./src/js/Entity/bullet/Laser.js","webpack:///./src/js/Entity/tower/SlowTower.js","webpack:///./src/js/Entity/bullet/SlowField.js","webpack:///./src/js/Entity/tower/FireTower.js","webpack:///./src/js/Entity/bullet/FireZone.js","webpack:///./src/js/Entity/tower/Block.js","webpack:///./src/js/Entity/Enemy.js","webpack:///./src/js/Entity/Map.js","webpack:///./src/js/Entity/Path.js","webpack:///./src/js/utils/BreadthFirstSearch.js","webpack:///./src/js/Wave.js","webpack:///./src/js/Entity/Message.js","webpack:///./src/js/Entity/GameControl.js","webpack:///./src/js/Entity/GameInfo.js","webpack:///./src/js/Entity/GameError.js","webpack:///./src/js/audio.js","webpack:///./assets/audios/short.mp3","webpack:///./src/style/index.less?768b","webpack:///./src/style/index.less","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js"],"names":["WIDTH","HEIGHT","GAME_CONTROL_WIDTH","GAME_CONTROL_HEIGHT","GRID_SIZE","gridWidth","gridHeight","gridNumX","gridNumY","FRAMERATE","OFFSET_X","OFFSET_Y","towerData","BASE","cost","info","LASER","SLOW","FIRE","BLOCK","toRadians","calculateDistance","isInside","highlightGrid","index2Px","px2Index","drawGrid","angle","Math","PI","Array","prototype","remove","from","to","rest","slice","length","push","apply","getEleById","id","result","forEach","ele","i","getEle","x1","y1","x2","y2","sqrt","limit","out","v","high","x","y","len","normalize","scale","pos","rect","width","height","ctx","LW","innerWidth","innerHeight","lowRatio","upRatio","save","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","restore","col","row","gridSize","offsetX","offsetY","floor","cols","rows","BaseTower","bullets","selected","damage","radius","type","level","barrelLength","hue","lastShootTime","Date","shootInterval","direction","bulletStartPosVec","fromValues","directionVec","create","targetIndex","target","targetId","range","upgradeGain","upgradeCost","cos","sin","shoot","step","renderShadow","shadowBlur","shadowColor","fillStyle","arc","fill","max","genId","enemies","prevTgt","getElementById","enemy","abs","color","atan2","globalId","value","getLength","config","cfgPlayAudio","orbit","MAP_SETTING","TowerFactory","BULLET","BulletTower","LaserTower","SlowTower","FireTower","Block","stage","game","beginGame","element","document","world","window","BORDER_WIDTH","canvas","getContext","backgroundCanvas","bgCtx","gameControlCanvas","panels","gameInfoCanvas","errorMsgCanvas","chooseStage","chooseStageButtons","getElementsByClassName","call","b","addEventListener","chooseStageHandler","status","e","dataset","style","display","windowResizeHandler","cvx","cvy","position","left","top","renderBackground","gradient","createRadialGradient","addColorStop","fillRect","EntityCollection","removed","splice","idx","startButton","backButton","$chooseStage","Game","opt","init","bindEvent","initData","startButtonClickHandler","bind","backButtonClickHandler","gameControlEle","gameControl","draw","$gameInfo","gameInfo","$gameError","gameError","clear","towers","money","enemyCreatedCount","lastCreatedEnemyTime","newTowerCoord","map","tower","mode","addTowerType","score","life","towerSelect","towerSelectIndex","towerSelectId","wave","waves","frames","timeLastSecond","getTime","fps","fpsRate","time","destory","stopPropagation","stopAnim","clearRect","cancelAnimationFrame","animId","calculateFPS","gameOver","shouldGenerateWave","generateWave","shouldGenerateEnemy","cfg","generateEnemy","basePos","random","speed","health","path","dead","reachDest","removeElementById","play","index","findTarget","detectImpact","bullet","bulletOutOfBound","removeElementByIndex","parent","shooting","coord","drawGhostTower","requestAnimationFrame","impact","distance","j","distBulletToEnemy","buff","every","source","duration","includes","towerType","console","log","showError","checkPath","findPath","findPointPath","wp","dx","dy","dist","angleFlag","oncontextmenu","preventDefault","onclick","getBoundingClientRect","clientX","clientY","createNewTower","onmousemove","cursorX","pageX","cursorY","pageY","waveFinish","title","innerHTML","frameTime","min","round","statusText","message","text","messages","start","CircleBullet","vx","vy","curDis","Bullet","velocity","bulletVec","end","add","laserId","findIndex","Laser","ratio","counter","slowField","SlowField","minRange","maxRange","maxLife","calcRange","minR","maxR","timePassed","timeStop","fireZone","FireZone","halfSize","Enemy","maxHealth","wpX","wpY","drawHealth","Map","mapSetting","blockArray","block","setPoints","setMap","current","next","minY","maxY","minX","maxX","graph","walls","startPoint","endPoint","bfs","pathArr","p","startArr","Path","points","addPoint","PATH_COLOR","lineJoin","lineCap","point","Graph","w","h","node","wall","results","filter","passable","inBounds","hasNode","Queue","elements","shift","BreadthFirstSearch","frontier","put","visited","cameFrom","curNeighbors","empty","get","neighbors","curX","curY","some","item","removeNode","find","Wave","enemyInitCnt","a","c","enemyCnt","Object","keys","key","enemyCfg","Message","startTime","vanish","font","fillText","GRID_WIDTH","GRID_HEIGHT","GRID_NUM_X","GRID_NUM_Y","FILL_COLOR","DISABLE_COLOR","HOVER_COLOR","TOWER_TYPE","GameControl","option","assign","towerAreaRect","commonBtnProp","pauseBtn","upgradeBtn","disable","sellBtn","towerArea","TowerArea","drawText","drawButton","drawSelectedTowerInfo","btn","strokeRect","toFixed","$element","$","click","$canvas","offset","xIdx","yIdx","sellTower","upgradeTower","mousemove","infoX","data","infos","baseTower","laserTower","slowTower","fireTower","highlightTower","GameInfo","count","setTimeout","textStartX","textWidth","measureText","t","GameError","msg","beepAudio","Audio"],"mappings":"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AAMrC,SAAN,GAAkB6D,QAAlB;AACAlH,QAAIqD,SAAJ,GAAgB6D,QAAhB;;AAEAxB,UAAM2B,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,8CAArB;AACH;;AAEDV;AACAM,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5vBA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,OAAO;AAC1B,oBAAoB,iBAAiB;AACrC;AACA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvwBD;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,O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ACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChbA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjdA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,WAAW,WAAW;AAClC;AACA;AACA;AACA;;AAEA,YAAY,WAAW,YAAY;AACnC;AACA;AACA;AACA;;AAEA,aAAa,YAAY,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,YAAY,YAAY;AACvC,eAAe,YAAY,YAAY;AACvC,eAAe,YAAY,aAAa;;AAExC,iBAAiB,cAAc,cAAc;AAC7C,iBAAiB,cAAc,cAAc;AAC7C,iBAAiB,cAAc,eAAe;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yEAAyC,aAAa;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,YAAY,YAAY;AACrC,aAAa,YAAY,YAAY;AACrC,aAAa,YAAY,aAAa;;AAEtC;AACA,sBAAsB,yBAAyB;AAC/C,0BAA0B,qBAAqB;AAC/C,0BAA0B,yBAAyB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA,yEAAyC,aAAa;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChpDA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA,sBAAsB;AACtB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AAAA;AAAA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjnBD;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;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ACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,kDAAkD,sBAAsB;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;;;;;;;;AC5WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,EAAE;AACrD,wCAAwC,WAAW,EAAE;;AAErD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,sCAAsC;AACtC,GAAG;AACH;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e45bcf8616327c88cf88","export const WIDTH = 800;\nexport const HEIGHT = 650;\n\nexport const GAME_CONTROL_WIDTH = 230;\nexport const GAME_CONTROL_HEIGHT = 650;\n\nexport const GRID_SIZE = 50;\nexport const gridWidth = GRID_SIZE;\nexport const gridHeight = GRID_SIZE;\n\nexport const gridNumX = 15;  // x轴方向上的格子数目\nexport const gridNumY = 11;  // y轴方向上的格子数目\n\nexport const FRAMERATE = 60;\n\nexport const OFFSET_X = 25;\nexport const OFFSET_Y = 50;\n\nexport const towerData = {\n    BASE: {\n        cost: 200,\n        info: '子弹塔：沙包大的子弹见过没有？'\n    },\n    LASER: {\n        cost: 200,\n        info: '激光塔：哎哟，不错！'\n    },\n    SLOW: {\n        cost: 600,\n        info: '减速塔：Yo, Yo, Yo, 留下来！'\n    },\n    FIRE: {\n        cost: 400,\n        info: '火焰塔：啊哈，你想被烤成几分熟？'\n    },\n    BLOCK: {\n        cost: 50,\n        info: ''\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/constant.js","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/common.js\n// module id = 1\n// module chunks = 0","import { vec2 } from 'gl-matrix';\nimport { GRID_SIZE, OFFSET_X, OFFSET_Y } from './constant';\n\nexport function toRadians(angle) {\n    return angle * (Math.PI / 180);\n}\n\n// Array Remove - By John Resig (MIT Licensed)\nArray.prototype.remove = function (from, to) {\n    let rest = this.slice((to || from) + 1 || this.length);\n    this.length = from < 0 ? this.length + from : from;\n    return this.push.apply(this, rest);\n};\n\nArray.prototype.getEleById = function (id) {\n    let result = null;\n    this.forEach((ele, i) => {\n        if (ele.id === id) {\n            result = ele;\n        }\n    });\n    return result;\n};\n\nArray.prototype.getEle = function (ele) {\n    for (let i = 0; i < this.length; i++) {\n        if (this[i] === ele) {\n            return ele;\n        }\n    }\n    return null;\n};\n\nexport function calculateDistance(x1, y1, x2, y2) {\n    const result = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    return result;\n}\n\n// Make sure v is smaller than high\nvec2.limit = function (out, v, high) {\n    'use strict';\n\n    let x = v[0],\n        y = v[1];\n\n    let len = x * x + y * y;\n\n    if (len > high * high && len > 0) {\n        out[0] = x;\n        out[1] = y;\n        vec2.normalize(out, out);\n        vec2.scale(out, out, high);\n    }\n    return out;\n};\n\nexport function isInside(pos, rect) {\n    return (\n        pos.x > rect.x &&\n        pos.x < rect.x + rect.width &&\n        pos.y < rect.y + rect.height &&\n        pos.y > rect.y\n    );\n}\n\n/**\n * \n * @param {*} ctx \n * @param {*} x  top left x coordinate\n * @param {*} y  top left y coordinate\n * @param {*} WIDTH grid's width\n * @param {*} HEIGHT grid's height\n *       ____\n *      |    |\n *      |____|\n */\nexport function highlightGrid(ctx, x, y, WIDTH, HEIGHT) {\n    const LW = 3;   // lineWidth\n    const innerWidth = WIDTH - LW;\n    const innerHeight = HEIGHT - LW;\n    const lowRatio = 0.35;\n    const upRatio = 1 - lowRatio;\n\n    ctx.save();\n    ctx.strokeStyle = 'pink';\n    ctx.lineWidth = LW;\n\n    ctx.beginPath();\n    ctx.moveTo(x + LW, y + LW);\n    ctx.lineTo(x + lowRatio * WIDTH + LW, y + LW);\n\n    ctx.moveTo(x + upRatio * WIDTH, y + LW);\n    ctx.lineTo(x + innerWidth, y + LW);\n    ctx.lineTo(x + innerWidth, y + lowRatio * HEIGHT);\n\n    ctx.moveTo(x + innerWidth, y + upRatio * HEIGHT - LW);\n    ctx.lineTo(x + innerWidth, y + innerHeight);\n    ctx.lineTo(x + upRatio * WIDTH, y + innerHeight);\n\n    ctx.moveTo(x + lowRatio * WIDTH, y + innerHeight);\n    ctx.lineTo(x + LW, y + innerHeight);\n    ctx.lineTo(x + LW, y + upRatio * HEIGHT - LW);\n\n    ctx.moveTo(x + LW, y + lowRatio * HEIGHT);\n    ctx.lineTo(x + LW, y + LW);\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\n\n/**\n * 根据一个格子的行和列，计算出其中心在坐标系中用像素表示的坐标\n * @param {number} col 处于第几列，对应于x坐标\n * @param {number} row 处于第几行，对应于y坐标\n */\nexport function index2Px(col, row, gridSize = GRID_SIZE) {\n    const offsetX = OFFSET_X;\n    const offsetY = OFFSET_Y;\n\n    const x = col * gridSize + gridSize * 0.5 + offsetX;\n    const y = row * gridSize + gridSize * 0.5 + offsetY;\n\n    return {x, y};\n}\n\n/**\n * 根据一个点在canvas上的像素坐标，计算出其所在格子的行和列\n * @param {number} x x坐标\n * @param {number} y y坐标\n */\nexport function px2Index(x, y, gridSize = GRID_SIZE) {\n    const offsetX = OFFSET_X;\n    const offsetY = OFFSET_Y;\n\n    const col = Math.floor((x - offsetX) / gridSize);\n    const row = Math.floor((y - offsetY) / gridSize);\n\n    return {col, row};\n}\n\nexport function drawGrid(ctx, cols, rows, gridSize = GRID_SIZE, strokeStyle = '#aaa', offsetX = 0, offsetY = 0) {\n    ctx.strokeStyle = strokeStyle;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    \n    // Draw vertical lines\n    ctx.moveTo(offsetX - 0.5, offsetY);\n    ctx.lineTo(offsetX - 0.5, rows * gridSize + offsetY);\n    for (let i = 0; i < cols + 1; i++) {\n        ctx.moveTo(i * gridSize - 0.5 + offsetX, offsetY);\n        ctx.lineTo(i * gridSize - 0.5 + offsetX, rows * gridSize + offsetY);\n    }\n    ctx.stroke();\n    \n    // Draw horizontal lines\n    ctx.moveTo(offsetX, offsetY - 0.5);\n    ctx.lineTo(cols * gridSize + offsetX, offsetY - 0.5);\n    for (let i = 0; i < rows + 1; i++) {\n        ctx.moveTo(offsetX, i * gridSize - 0.5 + offsetY);\n        ctx.lineTo(cols * gridSize + offsetX, i * gridSize - 0.5 + offsetY);\n    }\n    ctx.stroke();\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/utils.js","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nimport * as glMatrix from \"./gl-matrix/common\";\nimport * as mat2 from \"./gl-matrix/mat2\";\nimport * as mat2d from \"./gl-matrix/mat2d\";\nimport * as mat3 from \"./gl-matrix/mat3\";\nimport * as mat4 from \"./gl-matrix/mat4\";\nimport * as quat from \"./gl-matrix/quat\";\nimport * as vec2 from \"./gl-matrix/vec2\";\nimport * as vec3 from \"./gl-matrix/vec3\";\nimport * as vec4 from \"./gl-matrix/vec4\";\n\nexport {\n  glMatrix,\n  mat2, mat2d, mat3, mat4,\n  quat,\n  vec2, vec3, vec4,\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix.js\n// module id = 3\n// module chunks = 0","/**\n * 用于发射圆形子弹的塔\n */\n\nimport Bullet from './../bullet/CircleBullet';\nimport { vec2 } from 'gl-matrix';\nimport { toRadians, calculateDistance, px2Index } from './../../utils/utils';\nimport { config } from './../../utils/config';\nimport { GRID_SIZE, towerData } from './../../utils/constant';\nimport globalId from './../../id';\n\n\nexport default class BaseTower {\n    constructor({ id, ctx, x, y, bullets, selected, damage, radius }) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.ctx = ctx;\n        this.type = 'BASE';\n        this.level = 1;\n        const { col, row } = px2Index(x, y);\n        this.col = col;\n        this.row = row;\n        this.radius = radius || 10;\n        this.barrelLength = 2; \n        this.hue = 200;\n        this.bullets = bullets;\n        this.cost = towerData[this.type].cost;\n        this.lastShootTime = new Date();\n        this.shootInterval = 500;   // 发射间隔，单位ms\n        this.direction = 180;     // 用度数表示的tower指向\n        this.bulletStartPosVec = vec2.fromValues(0, 0);\n        this.directionVec = vec2.create();\n        this.targetIndex = -1;\n        this.target = null;\n        this.targetId = -1;\n        this.range = 4 * GRID_SIZE;\n        this.selected = selected || false;\n        this.damage = damage || 5;\n        this.upgradeGain = damage * 0.4;  // 升级后的伤害增益\n        this.upgradeCost = this.cost * 0.6;   \n    }\n\n    step() {\n        // 将方向向量归一化\n        this.directionVec = vec2.fromValues(\n            Math.cos(toRadians(this.direction)),\n            Math.sin(toRadians(this.direction))\n        );\n        vec2.normalize(this.directionVec, this.directionVec);\n\n        // bullet 出射位置\n        vec2.scale(this.bulletStartPosVec, this.directionVec, this.radius * this.barrelLength);\n\n        if (new Date - this.lastShootTime >= this.shootInterval) {\n            this.shoot();\n            this.lastShootTime = new Date();\n        }\n    }\n\n    draw() {\n        this.step();\n        const ctx = this.ctx;\n\n        ctx.save();\n        if (config.renderShadow) {\n            ctx.shadowBlur = this.radius;\n            ctx.shadowColor = 'hsl(' + this.hue + ',100%,60%)';\n        }\n\n        // 在选中的情况下，画出其射程范围\n        if (this.selected) {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n            ctx.arc(this.x, this.y, this.range, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        ctx.strokeStyle = 'hsl(' + this.hue + ',100%, 40%';\n        ctx.fillStyle = 'hsl(' + this.hue + ',100%, 40%';\n        ctx.lineWidth = Math.max(5, this.radius / 6);\n\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        // ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.moveTo(this.x, this.y);\n        ctx.lineTo(this.x + this.bulletStartPosVec[0], this.y + this.bulletStartPosVec[1]);\n        ctx.stroke();\n        ctx.closePath();\n\n        // this.direction = (this.direction + 0.6) % 360;\n\n        ctx.restore();\n    };\n\n    // 发射子弹\n    shoot() {\n        if (this.target) {\n            this.bullets.push(new Bullet({\n                id: globalId.genId(),\n                target: this.target,\n                ctx: this.ctx,\n                x: this.x + this.bulletStartPosVec[0],\n                y: this.y + this.bulletStartPosVec[1],\n                range: this.range,\n                damage: this.damage\n            }\n            ));\n        }\n    }\n\n    findTarget(enemies) {\n        // 先判断原有的target是否仍在范围内\n        if (this.target !== null) {\n            const prevTgt = enemies.getElementById(this.target.id);\n            if (prevTgt) {\n                if (calculateDistance(prevTgt.x, prevTgt.y, this.x, this.y) < this.range) {\n                    return;\n                }\n            }\n        }\n\n        // 去寻找一个新的target\n        this.targetIndex = -1;\n        this.targetId = -1;\n        this.target = null;\n\n        for (let i = 0, len = enemies.length; i < len; i++) {\n            const enemy = enemies[i];\n            if (Math.abs(enemy.x - this.x) + Math.abs(enemy.y - this.y) > this.range) {\n                // 简化计算\n                continue;\n            } else {\n                if (calculateDistance(enemy.x, enemy.y, this.x, this.y) < this.range) {\n                    if (this.target) { \n                        this.target.color = 0; \n                    }\n                    this.targetIndex = i;\n                    this.target = enemies[i];\n                    this.targetId = enemies[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (this.targetIndex !== -1) {\n            const target = enemies.getElementById(this.targetId);\n            if (target) {\n                this.directionVec = vec2.fromValues(target.x - this.x, target.y - this.y);\n                this.direction = Math.atan2(target.y - this.y, target.x - this.x) * (180 / Math.PI);\n\n                // target.color = 'red';\n            }\n            return target;\n        }\n    }\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/BaseTower.js","class globalId {\n    constructor() {\n        this.value  = [];\n    }\n\n    genId() {\n        if (this.getLength() === 0) {\n            this.value.push(0);\n            return 0;\n        } else {\n            const id = this.value[this.getLength() - 1] + 1;\n            this.value.push(id);\n            return id;\n        }\n    }\n\n    getLength() {\n        return this.value.length;\n    }\n\n    clear() {\n        this.value = [];\n    }\n}\n\nexport default new globalId();\n\n\n// WEBPACK FOOTER //\n// ./src/js/id.js","import { gridNumX, gridNumY } from './constant';\n\nexport const config = {\n    renderShadow: false\n};\n\nexport const cfgPlayAudio = false;\n\nconst cols = gridNumX;  // 16\nconst rows = gridNumY;  // 12\n\n// 地图路径坐标\nexport const orbit = {\n    1: [[1, 0], [1, rows - 1]],\n    2: [[0, 1], [cols - 4, 1], [cols - 4, 4], [6, 4], [6, 8], [cols - 2, 8], [cols - 2, rows - 1], [0, rows - 1]],\n    3: [[6, 0], [6, 5], [8, 5], [8, rows - 1]],\n};\n\nexport const MAP_SETTING = {\n    3: {\n        BLOCK: [[5, 3], [5, 4], [6, 4], [7, 4], [8, 4], [7, 8], [8, 8], [9, 8]]\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/config.js","import BaseTower from './BaseTower';\nimport BulletTower from './BulletTower';\nimport LaserTower from './LaserTower';\nimport SlowTower from './SlowTower';\nimport FireTower from './FireTower';\nimport Block from './Block';\n\nconst TowerFactory = {\n    BASE: BaseTower,\n    BULLET: BulletTower,\n    LASER: LaserTower,\n    SLOW: SlowTower,\n    FIRE: FireTower,\n    BLOCK: Block\n};\n\nexport {\n    BaseTower,\n    BulletTower,\n    LaserTower,\n    SlowTower,\n    FireTower,\n    Block\n};\n\nexport default TowerFactory;\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/index.js","import Game from './js/Game';\nimport { WIDTH, HEIGHT, GAME_CONTROL_WIDTH, GAME_CONTROL_HEIGHT } from './js/utils/constant';\nimport './style/index.less';\nlet stage = 1;\nlet game = {};\n\nfunction beginGame() {\n    game = new Game({\n        element: document.getElementById('drawing'),\n        stage\n    });\n    world.game = game;\n    world.stage = stage;\n\n    // FIXME: JUST FOR DEBUG\n    window.game = game;\n}\n\n// 游戏的全部状态保存在该对象中\nexport const world = {};\nwindow.world = world;\n\nconst BORDER_WIDTH = 6;\n\nconst canvas = document.getElementById('drawing');\nconst ctx = canvas.getContext('2d');\ncanvas.width = WIDTH;\ncanvas.height = HEIGHT;\n\nconst backgroundCanvas = document.getElementById('background');\nconst bgCtx = backgroundCanvas.getContext('2d');\nbackgroundCanvas.width = WIDTH + GAME_CONTROL_WIDTH;\nbackgroundCanvas.height = HEIGHT;\n\nconst gameControlCanvas = document.getElementById('game-control');\ngameControlCanvas.width = GAME_CONTROL_WIDTH;\ngameControlCanvas.height = GAME_CONTROL_HEIGHT;\n\nconst panels = document.getElementById('panels');\n\nconst gameInfoCanvas = document.getElementById('game-info');\nconst errorMsgCanvas = document.getElementById('error-message');\n\nconst chooseStage = document.getElementById('choose-stage');\nconst chooseStageButtons = document.getElementsByClassName('choose-stage-button');\n// 点击按钮选择不同的 stage\nArray.prototype.forEach.call(chooseStageButtons, b => {\n    b.addEventListener('click', chooseStageHandler, false);\n});\n\nconst status = document.getElementById('status');\n\nfunction chooseStageHandler(e) {\n    stage = e.target.dataset.stage;\n    chooseStage.style.display = 'none';\n    beginGame(stage);\n}\n\nfunction windowResizeHandler() {\n    // 确定canvas的位置\n    const cvx = (window.innerWidth - WIDTH - GAME_CONTROL_WIDTH) * 0.5;\n    const cvy = (window.innerHeight - HEIGHT) * 0.5;\n\n    canvas.style.position = 'absolute';\n    canvas.style.left = cvx + 'px';\n    canvas.style.top = cvy + 'px';\n\n    backgroundCanvas.style.position = 'absolute';\n    backgroundCanvas.style.left = cvx + BORDER_WIDTH + 'px';\n    backgroundCanvas.style.top = cvy + BORDER_WIDTH + 'px';\n\n    status.style.position = 'absolute';\n    status.style.left = cvx + BORDER_WIDTH + 'px';\n    status.style.top = cvy + BORDER_WIDTH + 'px';\n\n    gameControlCanvas.style.position = 'absolute';\n    gameControlCanvas.style.left = cvx + WIDTH + BORDER_WIDTH + 'px';\n    gameControlCanvas.style.top = cvy + 'px';\n\n    panels.style.position = 'absolute';\n    panels.style.left = cvx + BORDER_WIDTH + 'px';\n    panels.style.top = cvy + 200 + 'px';\n\n    gameInfoCanvas.style.position = 'absolute';\n    gameInfoCanvas.style.left = cvx + BORDER_WIDTH + 'px';\n    gameInfoCanvas.style.top = cvy + BORDER_WIDTH + 'px';\n\n    errorMsgCanvas.style.position = 'absolute';\n    errorMsgCanvas.style.left = cvx + BORDER_WIDTH + 'px';\n    errorMsgCanvas.style.top = cvy + BORDER_WIDTH + 'px';\n\n    chooseStage.style.position = 'absolute';\n    chooseStage.style.left = cvx + BORDER_WIDTH + 'px';\n    chooseStage.style.top = cvy + BORDER_WIDTH + 'px';\n}\n\nwindow.addEventListener('resize', windowResizeHandler, false);\n\nfunction renderBackground() {\n    const gradient = bgCtx.createRadialGradient(\n        (WIDTH + GAME_CONTROL_WIDTH) * 0.5,\n        HEIGHT * 0.5,\n        0,\n        (WIDTH + GAME_CONTROL_WIDTH) * 0.5,\n        HEIGHT * 0.5,\n        500\n    );\n\n    gradient.addColorStop(0, 'rgba(0, 70, 70, 1)');\n    gradient.addColorStop(1, 'rgba(0, 8, 14, 1');\n\n    bgCtx.fillStyle = gradient;\n    ctx.fillStyle = gradient;\n\n    bgCtx.fillRect(0, 0, WIDTH + GAME_CONTROL_WIDTH, HEIGHT);\n}\n\nwindowResizeHandler();\nrenderBackground();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat3.js\n// module id = 9\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec3.js\n// module id = 10\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec4.js\n// module id = 11\n// module chunks = 0","/**\n * 用于保存游戏中的各种 entity 的容器对象\n * 例如 enemy, tower, bullet\n * 提供增、删功能\n */\n\nclass EntityCollection extends Array {\n    constructor() {\n        super();\n    }\n\n    getElementById(id) {\n        for (let i = 0; i < this.length; i++) {\n            if (this[i].id === id) {\n                return this[i];\n            }\n        }\n        return null;\n    }\n\n    removeElementById(id) {\n        let removed;\n        for (let i = 0; i < this.length; i++) {\n            if (this[i].id === id) {\n                removed = this.splice(i, 1);\n                break;\n            }\n        }\n        return removed;\n    }\n\n    removeElementByIndex(idx) {\n        const removed = this.splice(idx, 1);\n        return removed;\n    }\n}\n\nexport default EntityCollection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/EntityCollection.js","import { vec2 } from 'gl-matrix';\nimport TowerFactory from './Entity/tower';\nimport Enemy from './Entity/Enemy';\nimport Map from './Entity/Map';\nimport Wave from './Wave';\nimport Message from './Entity/Message';\nimport { calculateDistance, index2Px, px2Index } from './utils/utils';\nimport {\n    gridNumX,\n    gridNumY,\n    WIDTH,\n    HEIGHT,\n    GAME_CONTROL_WIDTH,\n    towerData,\n    FRAMERATE,\n    OFFSET_X,\n    OFFSET_Y,\n    GRID_SIZE\n} from './utils/constant';\nimport globalId from './id';\nimport GameControl from './Entity/GameControl';\nimport GameInfo from './Entity/GameInfo';\nimport GameError from './Entity/GameError';\nimport { orbit, cfgPlayAudio } from './utils/config';\nimport { world } from '../index';\nimport EntityCollection from './EntityCollection';\nimport { beepAudio } from './audio';\n\nconst BORDER_WIDTH = 6;\n\nconst canvas = document.getElementById('drawing');\nconst ctx = canvas.getContext('2d');\n\nconst backgroundCanvas = document.getElementById('background');\nconst bgCtx = backgroundCanvas.getContext('2d');\nbackgroundCanvas.width = WIDTH + GAME_CONTROL_WIDTH;\nbackgroundCanvas.height = HEIGHT;\n\nconst gameControlCanvas = document.getElementById('game-control');\nconst panels = document.getElementById('panels');\nconst startButton = document.getElementById('start-button');\nconst backButton = document.getElementById('back-button');\nconst $chooseStage = document.getElementById('choose-stage');\n\nconst gameInfoCanvas = document.getElementById('game-info');\nconst status = document.getElementById('status');\n\nexport default class Game {\n    constructor(opt) {\n        // Init\n        canvas.width = WIDTH;\n        canvas.height = HEIGHT;\n        this.element = opt.element;\n        this.ctx = ctx;\n        this.stage = opt.stage;\n\n        this.init();\n        this.bindEvent();\n    }\n\n    init() {\n        this.initData();\n\n        startButton.addEventListener('click', this.startButtonClickHandler.bind(this), false);\n        backButton.addEventListener('click', this.backButtonClickHandler.bind(this), false);\n\n        this.renderBackground();\n\n        panels.style.display = 'block';\n\n        const gameControlEle = document.getElementById('game-control');\n        const gameControl = new GameControl({\n            element: gameControlEle,\n            game: this\n        });\n        this.gameControl = gameControl;\n        gameControl.draw();\n        \n        const $gameInfo = document.getElementById('game-info');\n        const gameInfo = new GameInfo({\n            element: $gameInfo,\n            game: this\n        });\n        this.gameInfo = gameInfo;\n        gameInfo.draw();\n\n        const $gameError = document.getElementById('error-message');\n        const gameError = new GameError({\n            element: $gameError,\n            game: this\n        });\n        this.gameError = gameError;\n        gameError.draw();\n    }\n\n    initData() {\n        this.genId = 0;\n        globalId.clear();\n\n        this.bullets = new EntityCollection();\n        this.towers = new EntityCollection();\n        this.enemies = new EntityCollection();\n\n        this.money = 5000;\n        this.col = 0;\n        this.row = 0;\n        this.enemyCreatedCount = 0; // 目前已经创建的enemy的总数\n        this.lastCreatedEnemyTime = new Date();\n\n        this.orbit = orbit[this.stage];\n\n        const newTowerCoord = [5, 3];\n        this.map = new Map({ ctx, WIDTH, HEIGHT, newTowerCoord, orbit: this.orbit, game: this });\n\n        // 放置一个初始状态下的塔\n        const tower = new TowerFactory['BASE']({\n            id: globalId.genId(),\n            ctx,\n            x: GRID_SIZE / 2 + newTowerCoord[0] * GRID_SIZE + OFFSET_X,\n            y: GRID_SIZE / 2 + newTowerCoord[1] * GRID_SIZE + OFFSET_Y,\n            bullets: this.bullets\n        });\n        this.towers.push(tower);\n\n        this.mode = '';\n        this.addTowerType = 'BASE';\n        this.status = '';\n        this.score = 0;\n        this.life = 1000;\n\n        // 当前是否选中塔\n        this.towerSelect = false;\n        this.towerSelectIndex = -1;\n        this.towerSelectId = -1;\n\n        this.wave = -1; // 当前第几波\n        this.waves = [];\n\n        // FPS 相关数据\n        this.frames = 0;\n        this.timeLastSecond = new Date().getTime();\n        this.fps = 0;\n        this.fpsRate = 0;\n        this.time = 0;\n\n        this.destory = false;\n    }\n\n    renderBackground() {\n        const gradient = bgCtx.createRadialGradient(\n            (WIDTH + GAME_CONTROL_WIDTH) * 0.5,\n            HEIGHT * 0.5,\n            0,\n            (WIDTH + GAME_CONTROL_WIDTH) * 0.5,\n            HEIGHT * 0.5,\n            500\n        );\n\n        gradient.addColorStop(0, 'rgba(0, 70, 70, 1)');\n        gradient.addColorStop(1, 'rgba(0, 8, 14, 1');\n\n        bgCtx.fillStyle = gradient;\n        ctx.fillStyle = gradient;\n\n        bgCtx.fillRect(0, 0, WIDTH + GAME_CONTROL_WIDTH, HEIGHT);\n    }\n\n    startButtonClickHandler(e) {\n        e.stopPropagation();\n\n        if (this.status === '' || this.status === 'gameOver') {\n            panels.style.display = 'none';\n            status.style.display = 'block';\n            this.initData();\n            this.status = 'running';\n            this.draw();\n            this.gameControl.draw();\n        }\n\n        // 游戏开始时间\n        this.time = new Date().getTime();\n    }\n\n    backButtonClickHandler(e) {\n        e.stopPropagation();\n\n        this.gameControl.stopAnim();\n        $chooseStage.style.display = 'block';\n        const panels = document.getElementById('panels');\n        panels.style.display = 'none';\n        this.ctx.clearRect(0, 0, this.element.width, this.element.height);\n        const gameControl = this.gameControl;\n        gameControl.ctx.clearRect(0, 0, gameControl.element.width, gameControl.element.height);\n\n        this.destory = true;\n        cancelAnimationFrame(this.animId);\n        this.status = '';\n    }\n\n    draw() {\n        // 游戏尚未开始的状态\n        if (this.status === '') {\n            return;\n        }\n\n        // FIXME: 选择不同的 stage 之后，之前的游戏画面会出现干扰\n        if (this.stage !== world.stage || this.destory) {\n            return;\n        }\n        \n        // 游戏结束\n        if (this.status === 'gameOver') {\n            cancelAnimationFrame(this.animId);  // NOT work !?\n            return;\n        }\n\n        // 游戏暂停状态\n        if (this.status === 'pause') {\n            return;\n        }\n\n        this.calculateFPS();\n\n        this.map.draw({\n            towers: this.towers,\n            towerSelect: this.towerSelect,\n            towerSelectIndex: this.towerSelectIndex\n        });\n\n        // TODO: 完成设定波数后，游戏也会结束\n        if (this.life <= 0) {\n            this.gameOver();\n        }\n\n        if (this.shouldGenerateWave()) {\n            this.generateWave();\n        }\n\n        // 生成enemy\n        // 总数小于50，且间隔 x ms以上\n        if (this.shouldGenerateEnemy()) {\n            const cfg = this.waves[this.wave].generateEnemy();\n            const basePos = this.orbit[0];\n            const enemy = new Enemy({\n                id: globalId.genId(),\n                ctx: ctx,\n                x: GRID_SIZE / 2 + (Math.random() - 0.5) * 10 + basePos[0] * GRID_SIZE + OFFSET_X,\n                y: GRID_SIZE / 2 + (Math.random() - 0.5) * 10 + basePos[1] * GRID_SIZE + OFFSET_Y,\n                color: cfg.color,\n                radius: cfg.radius,\n                speed: cfg.speed,\n                health: cfg.health * (1 + this.wave / 5),\n                path: this.map.orbit\n            });\n\n            this.enemies.push(enemy);\n            this.enemyCreatedCount++;\n            this.lastCreatedEnemyTime = new Date();\n        }\n\n        // 对每一个enemy进行step操作，并绘制\n        this.enemies.forEach(enemy => {\n            enemy.step({ path: this.map.orbit });\n            enemy.draw();\n\n            if (enemy.dead) {\n                if (enemy.reachDest) {\n                    this.life -= enemy.damage;\n                }\n                this.enemies.removeElementById(enemy.id);\n                cfgPlayAudio && beepAudio.play();\n            }\n        });\n\n        // Draw our tower\n        this.towers.forEach((tower, index) => {\n            if (this.towerSelect && this.towerSelectIndex === index) {\n                // 选中的塔需画出其范围\n                tower.selected = true;\n            } else {\n                tower.selected = false;\n            }\n            tower.draw(ctx);\n        });\n\n        // 确定 tower 的目标\n        this.towers.forEach(tower => {\n            tower.findTarget(this.enemies);\n            if (tower.target !== null) {\n                const target = tower.target;\n                // 调整其朝向\n                tower.directionVec = vec2.fromValues(target.x - tower.x, target.y - tower.y);\n\n                tower.direction =\n                    Math.atan2(target.y - tower.y, target.x - tower.x) * (180 / Math.PI);\n            }\n        });\n\n        // 检查bullet是否与enemy相撞\n        this.detectImpact();\n\n        // 移除出界的bullet，画出剩下的bullet\n        for (let i = 0; i < this.bullets.length; i++) {\n            const bullet = this.bullets[i];\n\n            switch (bullet.type) {\n                case 'line':\n                case 'circle': {\n                    if (bulletOutOfBound(bullet)) {\n                        this.bullets.removeElementByIndex(i--);\n                    } else {\n                        bullet.draw(ctx, this.enemies);\n                    }\n                    break;\n                }\n                case 'laser': {\n                    // 如果 bullet 的目标和其 parent 的目标不一致时，则删除这个 bullet\n                    if (!bullet.parent.target || bullet.parent.target.id !== bullet.target.id) {\n                        this.bullets.removeElementByIndex(i--);\n                        bullet.parent.shooting = false;\n                    } else {\n                        bullet.draw(ctx, this.enemies);\n                    }\n                    break;\n                }\n                case 'slow': \n                case 'fire': {\n                    if (bullet.life <= 0) {\n                        this.bullets.removeElementByIndex(i--);\n                        bullet.parent.shooting = false;\n                    } else {\n                        bullet.parent.shooting = true;\n                        bullet.draw(ctx);\n                    }\n                    break;\n                }\n                default:\n                    bullet.draw(ctx);\n            }\n        }\n\n        if (this.mode === 'ADD_TOWER') {\n            // 添加塔模式\n            if (\n                0 <= this.col &&\n                this.col < gridNumX &&\n                0 <= this.row &&\n                this.row < gridNumY\n            ) {\n                if (this.map.coord[this.col][this.row] !== 'T') {\n                    // 该位置没有塔\n                    this.drawGhostTower(\n                        ctx,\n                        index2Px(this.col, this.row).x,\n                        index2Px(this.col, this.row).y,\n                        this.addTowerType\n                    );\n                }\n            }\n        }\n\n        this.animId = requestAnimationFrame(() => this.draw());\n    }\n\n    // 循环检测 bullet 是否和 enemy 碰撞\n    detectImpact() {\n        for (var i = 0; i < this.bullets.length; i++) {\n            let impact = false;\n            let distance = 0;\n            const bullet = this.bullets[i];\n\n            for (var j = 0; j < this.enemies.length; j++) {\n                const enemy = this.enemies[j];\n\n                // 计算 bullet 和 enemy 距离\n                distance = distBulletToEnemy(bullet, enemy);\n\n                // enemy进入bullet的作用范围后，依据其种类产生效果\n                switch (bullet.type) {\n                    case 'circle':\n                    case 'laser':\n                        if (distance <= enemy.radius + 2) {\n                            impact = true;\n                            enemy.health -= bullet.damage;\n                            if (enemy.health <= 0) {\n                                this.money += enemy.value;\n                                this.enemies.removeElementByIndex(j--);\n                                cfgPlayAudio && beepAudio.play();\n                                \n                                this.score += 100;\n                            }\n                            break;\n                        }\n                        break;\n\n                    case 'slow':\n                        if (distance <= bullet.range) {\n                            if (enemy.buff.every(b => b.source !== bullet.id)) {\n                                enemy.buff.push({\n                                    type: 'deceleration',\n                                    value: 0.35,\n                                    source: bullet.id,\n                                    duration: 10\n                                });\n                            }\n                        }\n                        break;\n\n                    case 'fire':\n                        if (distance <= bullet.range) {\n                            enemy.health -= bullet.damage;\n                            if (enemy.health <= 0) {\n                                this.money += enemy.value;\n                                this.enemies.removeElementByIndex(j--);\n                                this.score += 100;\n                            }\n                        }\n                        break;\n                }\n            }\n\n            if (['laser', 'slow', 'fire'].includes(bullet.type)) {\n                impact = false;\n            }\n            if (impact) {\n                this.bullets.removeElementByIndex(i--);\n            }\n        }\n    }\n\n    /**\n     * 创建一个新的tower\n     * @param {Number} col x轴的坐标  \n     * @param {Number} row y轴的坐标\n     */\n    createNewTower(col, row, towerType) {\n        // 检查当前位置是否已有物体\n        if (this.map.coord[col][row] === 'T') {\n            console.log('You can not place tower here!');\n            return -1;\n        }\n        const cost = towerData[towerType].cost;\n        // 检查是否有足够金钱\n        if (this.money - cost < 0) {\n            this.showError('You do not have enough money.');\n            return -1;\n        }\n\n        const {x, y} = index2Px(col, row);\n        const id = globalId.genId();\n\n        const config = { id, ctx, x, y, bullets: this.bullets };\n\n        let tower = new TowerFactory[towerType](config);\n\n        if (!this.map.checkPath(col, row)) {\n            const info = '存在不能到达的区域，不能放置在这里';\n            this.showError(info);\n            return;\n        };\n\n        if (tower.type === 'BLOCK') {\n            this.map.coord[col][row] = 'B';\n        } else {\n            this.map.coord[col][row] = 'T';\n        }\n        this.map.findPath();\n        // 重新计算当前 enemy 的路径\n        this.enemies.forEach(enemy => {\n            const { col, row } = px2Index(enemy.x, enemy.y);\n            enemy.path = this.map.findPointPath([col, row]);\n            enemy.wp = 1;\n        \n            // 当前位置到目标点的距离\n            enemy.dx = 0;\n            enemy.dy = 0;\n            enemy.dist = 0;\n        \n            // 标记是否需要转弯\n            enemy.angleFlag = 1;\n        });\n\n        this.money -= cost;\n        this.towers.push(tower);\n    }\n\n    sellTower(index = this.towerSelectIndex) {\n        const tower = this.towers[index];\n        const { col, row, type: towerType = 'BASE' } = tower;\n\n        // 删除 laser tower 时将其对应的 laser 一起删除\n        if (towerType === 'LASER') {\n            for (let i = 0; i < this.bullets.length; i++) {\n                const bullet = this.bullets[i];\n                if (bullet.type === 'laser' && bullet.parent.id === tower.id) {\n                    this.bullets.removeElementByIndex(i--);\n                }\n            }\n        }\n\n        this.towers.removeElementByIndex(index);\n        this.map.coord[col][row] = '';\n\n        // 出售价格改为购买价格的 50%\n        this.money += (towerData[towerType].cost * 0.5);\n        this.towerSelect = false;\n        this.towerSelectIndex = -1;\n    }\n\n    upgradeTower(index = this.towerSelectIndex) {\n        const tower = this.towers[index];\n        if (tower.level < 4) {\n            // TODO: 对塔的升级应该按预设数值，或按比例\n            // TODO: 将塔的升级方法写入塔自身的 class 中去\n            tower.range *= 1.25;\n            tower.damage *= 1.5;\n            tower.level++;\n        } else {\n            this.showError('已升级至最大值');\n        }\n    }\n\n    // 准备放置塔时，在鼠标所在位置画一个虚拟的塔\n    drawGhostTower(ctx, x, y, towerType) {\n        const config = { ctx, x, y, bullets: this.bullets, selected: true };\n        const tower = new TowerFactory[towerType](config);\n        tower.draw(ctx);\n    }\n\n    bindEvent() {\n        const canvas = this.element;\n        const game = this;\n\n        // 在canvas上进行右键操作\n        canvas.oncontextmenu = function(e) {\n            game.mode = '';\n            e.preventDefault();\n        };\n\n        canvas.onclick = function(e) {\n            const rect = canvas.getBoundingClientRect();\n        \n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n        \n            const { col, row } = px2Index(x, y);\n            // console.log(col, row);\n                 \n            /* 只在地图范围内进行操作 */\n            if (0 <= col && col < gridNumX && 0 <= row && row < gridNumY) {\n                if (game.map.coord[col][row] === 'T') {\n                    // 点击的格子内为塔\n                    game.towers.map((tower, index) => {\n                        if (tower.col === col && tower.row === row) {\n                            console.log(`You select ${index}th tower, its id is ${tower.id}`);\n                            // 已经选中的塔再次点击则取消\n                            if (game.towerSelectIndex === index) {\n                                game.towerSelectIndex = -1;\n                                game.towerSelectId = -1;\n                                game.towerSelect = false;\n                                // game.map.selectCoord = null;                                \n                            } else {\n                                game.towerSelectIndex = index;\n                                game.towerSelectId = tower.id;\n                                game.towerSelect = true;\n                                // game.map.selectCoord = { col, row };\n                            }\n                        }\n                    });\n                } else {\n                    game.towerSelect = false;\n                    game.towerSelectId = -1;\n                    game.towerSelectIndex = -1;\n                    // game.map.selectCoord = { col, row };\n                }\n        \n                if (game.mode === 'ADD_TOWER') {\n                    game.createNewTower(col, row, game.addTowerType);\n                }\n            }\n        };\n\n        canvas.onmousemove = function(e) {\n            if (game.mode === 'ADD_TOWER') {\n                game.cursorX = e.pageX;\n                game.cursorY = e.pageY;\n                const rect = canvas.getBoundingClientRect();\n                const x = e.clientX - rect.left;\n                const y = e.clientY - rect.top;\n                const { col, row } = px2Index(x, y);\n                game.col = col;\n                game.row = row;\n            }\n        };\n    }\n\n    shouldGenerateEnemy() {\n        return this.wave < 999 && new Date() - this.lastCreatedEnemyTime > 1000;\n    }\n\n    shouldGenerateWave() {\n        return this.waves.length === 0 || this.waves[this.wave].waveFinish();\n    }\n\n    generateWave() {\n        this.waves.push(new Wave());\n        this.wave++;\n    }\n\n    gameOver() {\n        const title = document.getElementById('title');\n        title.innerHTML = `得分：${this.score}`;\n        panels.style.display = 'block';\n        this.status = 'gameOver';\n        cancelAnimationFrame(this.animId);\n    }\n\n    calculateFPS() {\n        // 当前帧的时间\n        const frameTime = new Date().getTime();\n        this.frames++;\n        \n        // 距离上次更新 FPS 已经过去了一秒\n        if (frameTime > this.timeLastSecond + 1000) {\n            this.fps = Math.min(\n                Math.round(this.frames * 1000 / (frameTime - this.timeLastSecond)),\n                FRAMERATE\n            );\n\n            this.timeLastSecond = frameTime;\n            this.frames = 0;\n        }\n        \n        const fps = Math.round(this.fps);\n        const time = Math.round((new Date().getTime() - this.time) / 1000 * 100) / 100; // 显示时间保留两位小数\n        const fpsRate = Math.round(Math.min(this.fps / FRAMERATE, 1) * 100);\n        \n        let statusText = `Time: <span>${time}</span>`;\n        statusText += `<p class=\"fps\">FPS: <span>${fps} (${fpsRate}%)</span></p>`;\n        \n        status.innerHTML = statusText;\n    }\n\n    showError(info) {\n        const message = new Message({ text: info });\n        console.log(info);\n        this.gameError.messages.push(message);\n    }\n}\n\nfunction bulletOutOfBound(bullet) {\n    switch (bullet.type) {\n        case 'circle':\n            return bullet.x < 0 || bullet.y < 0 || bullet.x > WIDTH || bullet.y > HEIGHT;\n\n        case 'line':\n            return (\n                bullet.start[0] < 0 ||\n                bullet.start[1] < 0 ||\n                bullet.start[0] > WIDTH ||\n                bullet.start[1] > HEIGHT\n            );\n\n        default:\n            return false;\n    }\n}\n\n// 计算不同种类的 bullet 和 enemy 的距离\nfunction distBulletToEnemy(bullet, enemy) {\n    let dist;\n\n    switch (bullet.type) {\n        case 'circle':\n        case 'slow':\n        case 'fire':\n            dist = calculateDistance(bullet.x, bullet.y, enemy.x, enemy.y);\n            break;\n        case 'laser':\n            if (bullet.target.id === enemy.id) {\n                dist = 0;\n            }\n            break;\n    }\n    return dist;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Game.js","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat2.js\n// module id = 15\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat2d.js\n// module id = 16\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return mat4.identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat4.js\n// module id = 17\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\"\nimport * as mat3 from \"./mat3\"\nimport * as vec3 from \"./vec3\"\nimport * as vec4 from \"./vec4\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/quat.js\n// module id = 18\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nimport * as glMatrix from \"./common\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/vec2.js\n// module id = 19\n// module chunks = 0","import { vec2 } from 'gl-matrix';\nimport { toRadians, calculateDistance } from './../../utils/utils';\n\nexport default class CircleBullet {\n    constructor({ ctx, x, y, target, range, damage }) {\n        this.type = 'circle';\n        this.x = x;\n        this.y = y;\n        this.ctx = ctx;\n        this.target = target;\n        this.radius = 3;\n        this.speed = 5;\n        this.vx = 0;\n        this.vy = 0;\n        this.angle = 0;\n        this.hue = 200;\n        this.range = range;\n        this.damage = damage || 5;\n    }\n\n    step(enemies) {\n        // 计算新位置\n        \n        if (this.target) {\n            const target = enemies.getElementById(this.target.id);\n            if (target) {\n                const curDis = calculateDistance(target.x, target.y, this.x, this.y);\n                if (curDis < this.range) {\n                    const dx = target.x - this.x;\n                    const dy = target.y - this.y;\n                    this.angle = Math.atan2(dy, dx);\n                }\n            }\n        }\n        this.vx = Math.cos(this.angle) * this.speed;\n        this.vy = Math.sin(this.angle) * this.speed;\n\n        this.x += this.vx;\n        this.y += this.vy;\n    }\n\n    draw(ctx, enemies) {\n        this.step(enemies);\n\n        // 绘图开始\n        ctx.save();\n        ctx.strokeStyle = 'hsl(' + this.hue + ', 100%, 40%)';\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.restore();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/bullet/CircleBullet.js","import BaseTower from './BaseTower';\nimport Bullet from './../bullet/Bullet';\nimport { vec2 } from 'gl-matrix';\nimport { toRadians } from './../../utils/utils';\nimport { config } from './../../utils/config';\nimport { gridWidth, towerData } from './../../utils/constant';\n\n\nexport default class BulletTower extends BaseTower {\n    constructor(opt) {\n        // const { ctx, x, y, bullets, selected, damage } = opt;\n        super(opt);\n\n        this.type = 'BULLET';\n        this.hue = 100;\n        this.cost = towerData[this.type].cost;\n        this.range = 3 * gridWidth;\n\n        this.direction = opt.direction || 0;     // 用度数表示的tower指向\n        this.bulletStartPosVec = vec2.fromValues(0, 0);\n        this.directionVec = vec2.create();\n    }\n\n    draw() {\n        const ctx = this.ctx;\n\n        // 将方向向量归一化\n        this.directionVec = vec2.fromValues(\n            Math.cos(toRadians(this.direction)),\n            Math.sin(toRadians(this.direction))\n        );\n        vec2.normalize(this.directionVec, this.directionVec);\n\n        // bullet 出射位置\n\n        vec2.scale(this.bulletStartPosVec, this.directionVec, 30);\n\n        ctx.save();\n        if (config.renderShadow) {\n            ctx.shadowBlur = this.radius;\n            ctx.shadowColor = 'hsl(' + this.hue + ',100%,60%)';\n        }\n\n        // 在选中的情况下，画出其射程范围\n        if (this.selected) {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n            ctx.arc(this.x, this.y, this.range, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        ctx.strokeStyle = 'hsl(' + this.hue + ',100%,80%';\n        ctx.fillStyle = 'hsl(' + this.hue + ',100%,80%';\n        ctx.lineWidth = Math.max(3, this.radius / 8);\n\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.moveTo(this.x, this.y);\n        ctx.lineTo(this.x + this.bulletStartPosVec[0], this.y + this.bulletStartPosVec[1]);\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.targetIndex !== -1 && new Date - this.lastShootTime >= 500) {\n            this.shoot(ctx);\n            this.lastShootTime = new Date();\n        }\n\n        ctx.restore();\n    };\n\n    // 发射子弹\n    shoot(ctx) {\n        this.bullets.push(new Bullet({\n            ctx,\n            x: this.x + this.bulletStartPosVec[0],\n            y: this.y + this.bulletStartPosVec[1],\n            directionVec: this.directionVec\n        }\n        ));\n    }\n\n    findTarget(enemies) {\n        super.findTarget(enemies);\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/BulletTower.js","import { vec2 } from 'gl-matrix';\nimport { toRadians } from './../../utils/utils';\n\nexport default class Bullet {\n    constructor({ ctx, x, y, directionVec, damage }) {\n        this.type = 'line';\n        this.x = x;\n        this.y = y;\n        this.directionVec = directionVec;\n\n        // {vec2} this.start 表示起点位置的向量\n        this.start = vec2.fromValues(x, y);\n\n        this.hue = 200;\n\n        // {vec2} this.velocity 表示bullet速度的向量\n        // 将表示方向的单位向量乘以速率，得到速度向量\n        this.velocity = vec2.create();\n        vec2.scale(this.velocity, directionVec, 2);\n\n        // bullet的长度\n        this.length = 10;\n        // 从bullet的起点指向终点的向量\n        this.bulletVec = vec2.create();\n        vec2.scale(this.bulletVec, directionVec, this.length);\n\n        // {vec2} this.end 表示终点位置的向量\n        this.end = vec2.create();\n        this.end = vec2.add(this.end, this.start, this.bulletVec);\n\n        this.damage = damage || 5;\n    }\n\n    draw(ctx) {\n        // bullet运动后的起点和终点位置\n        vec2.add(this.start, this.start, this.velocity);\n        vec2.add(this.end, this.end, this.velocity);\n\n        // 绘图开始\n        ctx.save();\n        ctx.strokeStyle = 'hsl(' + this.hue + ', 100%, 80%)';\n        ctx.beginPath();\n        ctx.moveTo(this.start[0], this.start[1]);\n        ctx.lineTo(this.end[0], this.end[1]);\n        ctx.stroke();\n        ctx.restore();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/bullet/Bullet.js","import BaseTower from './BaseTower';\nimport Laser from '../bullet/Laser';\nimport { vec2 } from 'gl-matrix';\nimport { config } from './../../utils/config';\nimport { gridWidth, towerData } from './../../utils/constant';\nimport globalId from './../../id';\n\nexport default class LaserTower extends BaseTower {\n    constructor(opt) {\n        // const { ctx, x, y, bullets, selected, damage } = opt;\n        super(opt);\n\n        this.type = 'LASER';\n        this.hue = 60;\n        this.cost = towerData[this.type].cost;\n        this.range = 4 * gridWidth;\n        this.radius = opt.radius || 10;\n        this.barrelLength = 2.5;\n\n        this.direction = opt.direction || 0; // 用度数表示的tower指向\n        this.bulletStartPosVec = vec2.fromValues(0, 0);\n        this.directionVec = vec2.create();\n\n        this.shooting = false;\n        this.damage = 0.1;\n        this.laserId = -1;\n    }\n\n    shoot() {\n        if (this.target) {\n            const laserId = globalId.genId();\n            this.laserId = laserId;\n\n            const idx = this.bullets.findIndex(b => { \n                return b.parent === this; \n            });\n\n            // 如果 bullets 数组中已存在以本 tower 为 parent 的元素，则返回\n            if (idx > 0) { \n                return;\n            }\n\n            this.bullets.push(\n                new Laser({\n                    id: laserId,\n                    target: this.target,\n                    ctx: this.ctx,\n                    x: this.x + this.bulletStartPosVec[0],\n                    y: this.y + this.bulletStartPosVec[1],\n                    damage: this.damage,\n                    parent: this\n                })\n            );\n\n            this.shooting = true;\n        }\n    }\n\n    draw() {\n        this.step();\n        const ctx = this.ctx;\n\n        ctx.save();\n\n        if (config.renderShadow) {\n            ctx.shadowBlur = this.radius;\n            ctx.shadowColor = 'hsl(' + this.hue + ',100%,60%)';\n        }\n\n        // 在选中的情况下，画出其射程范围\n        if (this.selected) {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n            ctx.arc(this.x, this.y, this.range, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        ctx.strokeStyle = 'hsl(' + this.hue + ',100%, 80%';\n        ctx.fillStyle = 'hsl(' + this.hue + ',100%, 80%';\n        ctx.lineWidth = Math.max(3, this.radius / 8);\n\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.moveTo(this.x, this.y);\n        ctx.lineTo(this.x + this.bulletStartPosVec[0], this.y + this.bulletStartPosVec[1]);\n        ctx.lineWidth = 5;\n        ctx.stroke();\n        ctx.closePath();\n\n        if (this.targetIndex !== -1 && this.shooting === false) {\n            this.shoot(ctx);\n        }\n\n        ctx.restore();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/LaserTower.js","export default class Laser {\n    constructor({ ctx, x, y, parent, target, damage, id }) {\n        this.type = 'laser';\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.ctx = ctx;\n        this.target = target;\n        this.width = 5;\n        // this.speed = 8;\n        this.vx = 0;\n        this.vy = 0;\n        this.angle = 0;\n        this.hue = parent.hue;\n        this.damage = damage || 5;\n        this.parent = parent;\n    }\n\n    step() {\n        const parent = this.parent;\n        this.x = parent.x + parent.bulletStartPosVec[0];\n        this.y = parent.y + parent.bulletStartPosVec[1];\n    }\n\n    draw(ctx) {\n        this.step();\n\n        // 绘图开始\n        ctx.save();\n        ctx.strokeStyle = 'hsl(' + this.hue + ', 100%, 80%)';\n        ctx.beginPath();\n        ctx.moveTo(this.x, this.y);\n        ctx.lineTo(this.target.x, this.target.y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/bullet/Laser.js","/**\n * 减速塔\n */\n\nimport BaseTower from './BaseTower';\nimport SlowField from '../bullet/SlowField';\nimport { towerData, gridWidth } from './../../utils/constant';\nimport globalId from './../../id';\n\nexport default class SlowTower extends BaseTower {\n    constructor(opt) {\n        super(opt);\n        // const { ctx, x, y, selected, damage } = opt;    \n\n        this.type = 'SLOW';\n        this.hue = 120;\n        this.cost = towerData[this.type].cost;\n\n        this.range = 2.5 * gridWidth;\n\n        this.shooting = false;\n        this.ratio = 0.3;\n\n        this.counter = 0;\n    }\n\n    shoot() {\n        const slowField = new SlowField({\n            id: globalId.genId(),\n            ctx: this.ctx,\n            range: this.range,\n            ratio: this.ratio,\n            parent: this\n        });\n        this.bullets.push(slowField);\n    }\n\n    draw() {\n        const ctx = this.ctx;\n        ctx.save();\n        // 在选中的情况下，画出其射程范围\n        if (this.selected) {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n            ctx.arc(this.x, this.y, this.range, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        ctx.strokeStyle = 'hsl(' + this.hue + ',100%, 80%';\n        // ctx.fillStyle = 'hsl(' + this.hue + ',100%, 80%';\n        ctx.fillStyle = 'rgba(1, 158, 213, 0.15)';\n        ctx.lineWidth = Math.max(3, this.radius / 8);\n\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        if (this.targetIndex !== -1 && !this.shooting) {\n            this.shoot();\n            this.shooting = true;\n        }\n\n        ctx.restore();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/SlowTower.js","/**\n * 减速场 ====> 就是一个大圆圈\n */\n\nexport default class SlowField {\n    constructor(opt) {\n        const { ctx, parent, range, ratio, id } = opt;\n        this.type = 'slow';\n        this.ctx = ctx;\n        this.id = id;\n\n        // range 将随时间逐渐加大\n        this.minRange = 20;\n        this.maxRange = range;\n        this.range = this.minRange;\n\n        this.parent = parent;\n        this.ratio = ratio; // 减速系数\n\n        this.maxLife = 300;\n        this.life = this.maxLife;\n\n        this.x = parent.x;\n        this.y = parent.y;\n    }\n\n    draw(ctx) {\n        if (this.life > 0) {\n            this.range = this.calcRange();\n            ctx.save();\n            ctx.fillStyle = 'rgba(1, 158, 213, 0.15)';\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.range, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.restore();\n            this.life--;\n        }\n    }\n\n    /**\n     * range 会随时间由最小值逐步加大至最大值，然后保持在最大值\n     */\n    calcRange() {\n        const minR = this.minRange;\n        const maxR = this.maxRange;\n        const timePassed = this.maxLife - this.life;\n        const timeStop = 100;   // 在该时间点range达到最大\n\n        const range = minR + Math.min(timeStop, timePassed) * (maxR - minR) / timeStop;\n        return range;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/bullet/SlowField.js","/**\n * 范围攻击\n */\n\nimport BaseTower from './BaseTower';\nimport FireZone from '../bullet/FireZone';\nimport { towerData, gridWidth } from './../../utils/constant';\nimport globalId from './../../id';\n\nexport default class FireTower extends BaseTower {\n    constructor(opt) {\n        super(opt);\n        // const { ctx, x, y, selected, damage } = opt;    \n\n        this.type = 'FIRE';\n        this.hue = 0;\n        this.cost = towerData[this.type].cost;\n\n        this.range = 3 * gridWidth;\n\n        this.shooting = false;\n        this.damage = 0.05;\n\n        this.counter = 0;\n    }\n\n    shoot() {\n        const fireZone = new FireZone({\n            id: globalId.genId(),\n            ctx: this.ctx,\n            range: this.range,\n            damage: this.damage,\n            parent: this\n        });\n        this.bullets.push(fireZone);\n    }\n\n    draw() {\n        const ctx = this.ctx;\n        ctx.save();\n        // 在选中的情况下，画出其射程范围\n        if (this.selected) {\n            ctx.beginPath();\n            ctx.fillStyle = 'rgba(200, 200, 200, 0.3)';\n            ctx.arc(this.x, this.y, this.range, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        ctx.strokeStyle = 'hsl(' + this.hue + ',100%, 80%';\n        ctx.fillStyle = 'hsl(' + this.hue + ',100%, 80%';\n        // ctx.fillStyle = 'rgba(1, 158, 213, 0.3)';\n        ctx.lineWidth = Math.max(3, this.radius / 8);\n\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n\n        if (this.targetIndex !== -1 && !this.shooting) {\n            this.shoot();\n            this.shooting = true;\n        }\n\n        ctx.restore();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/FireTower.js","/**\n * 范围伤害 aoe\n */\n\nexport default class FireZone {\n    constructor(opt) {\n        const { ctx, parent, range, damage, id } = opt;\n        this.type = 'fire';\n        this.ctx = ctx;\n        this.id = id;\n\n        // range 将随时间逐渐加大\n        this.minRange = 20;\n        this.maxRange = range;\n        this.range = this.minRange;\n\n        this.parent = parent;\n        this.damage = damage;\n\n        this.maxLife = 300;\n        this.life = this.maxLife;\n\n        this.x = parent.x;\n        this.y = parent.y;\n    }\n\n    draw(ctx) {\n        if (this.life > 0) {\n            this.range = this.calcRange();\n            ctx.save();\n            ctx.fillStyle = 'rgba(255, 0, 0, 0.15)';\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.range, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.restore();\n            this.life--;\n        }\n    }\n\n    /**\n     * range 会随时间由最小值逐步加大至最大值，然后保持在最大值\n     */\n    calcRange() {\n        const minR = this.minRange;\n        const maxR = this.maxRange;\n        const timePassed = this.maxLife - this.life;\n        const timeStop = 100;   // 在该时间点range达到最大\n\n        const range = minR + Math.min(timeStop, timePassed) * (maxR - minR) / timeStop;\n        return range;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/bullet/FireZone.js","/**\n * 障碍物\n */\nimport BaseTower from './BaseTower';\nimport { GRID_SIZE } from '../../utils/constant';\n\nexport default class Block extends BaseTower {\n    constructor(opt) {\n        super(opt);\n\n        this.type = 'BLOCK';\n    }\n\n    draw() {\n        const ctx = this.ctx;\n        \n        ctx.save();\n\n        ctx.strokeStyle = 'greenyellow';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        const halfSize = GRID_SIZE / 2;\n        ctx.moveTo(this.x - halfSize, this.y - halfSize);\n        ctx.lineTo(this.x + halfSize, this.y + halfSize);\n        ctx.moveTo(this.x + halfSize, this.y - halfSize);\n        ctx.lineTo(this.x - halfSize, this.y + halfSize);\n\n        ctx.stroke();\n\n        ctx.restore();\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/tower/Block.js","import { GRID_SIZE } from './../utils/constant';\nimport { index2Px } from '../utils/utils';\n\nexport default class Enemy {\n    constructor(opt) {\n        this.id = opt.id;\n        this.ctx = opt.ctx;\n\n        // 用像素表示的当前位置\n        this.x = opt.x;\n        this.y = opt.y;\n\n        // 当前目标点waypoint的index\n        this.wp = 0;\n\n        // 速度在两个方向上的分量\n        this.vx = 0;\n        this.vy = 0;\n\n        this.speed = opt.speed || 2;\n\n        // 当前位置到目标点的距离\n        this.dx = 0;\n        this.dy = 0;\n        this.dist = 0;\n\n        // 需要绘制的半径大小\n        this.radius = opt.radius || 10;\n\n        // 标记是否需要转弯\n        this.angleFlag = 1;\n\n        this.color = opt.color || 0;\n        this.maxHealth = opt.health || 20;\n        this.health = this.maxHealth;\n\n        this.value = opt.value || 50;\n        this.damage = opt.damage || 5;\n\n        this.path = opt.path;\n\n        /**\n         * {\n         *   type: 'deceleration',\n         *   value: 0.1,\n         *   source: someId,\n         *   duration: 2000     // ms\n         * }\n         */\n        this.buff = [];\n    }\n\n    step() {\n        const path = this.path;\n        if (path.length === 0) {\n            return;\n        }\n\n        // 对 this.buff 中的数据进行依次处理\n        let speed = this.speed;\n        if (this.buff.length > 0) {\n            this.buff.forEach((b, idx) => {\n                if (b.type === 'deceleration') {\n                    // 减速效果\n                    if (b.duration-- > 0) {\n                        speed *= (1 - b.value); \n                    }\n                }\n                if (b.duration <= 0) {\n                    this.buff.remove(idx);\n                }\n            });\n        }\n\n        // 当即将达到终点时，path 长度为1，而 this.wp 为1，超出数组范围\n        const wp = path[Math.min(this.wp, path.length - 1)];\n\n        const { x: wpX, y: wpY } = index2Px(...wp);\n        this.dx = wpX - this.x;\n        this.dy = wpY - this.y;\n        this.dist = Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n\n        if (this.angleFlag) {\n            this.angle = Math.atan2(this.dy, this.dx);\n            this.angleFlag = 0;\n        }\n        this.vx = Math.cos(this.angle) * speed;\n        this.vy = Math.sin(this.angle) * speed;\n\n        if (Math.abs(this.dist) > speed) {\n            this.x += this.vx;\n            this.y += this.vy;\n        } else {\n            const { x, y } = index2Px(...wp);\n            this.x = x;\n            this.y = y;\n            if (this.wp + 1 >= path.length) {\n                // 到达终点\n                this.dead = true;\n                this.reachDest = true;\n            } else {\n                this.wp++;\n                this.angleFlag = 1;\n            }\n        }\n    }\n\n    draw() {\n        const ctx = this.ctx;\n        ctx.strokeStyle = this.color || '#eee';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.stroke();\n\n        this.drawHealth();\n        // this.drawItsPath();\n    }\n\n    drawHealth() {\n        const ctx = this.ctx;\n        ctx.beginPath();\n        ctx.moveTo(this.x - this.radius, this.y);\n        ctx.lineTo(this.x - this.radius + this.health / this.maxHealth * this.radius * 2, this.y);\n        ctx.stroke();\n    }\n\n    /**\n     * 画出它的前进路径\n     */\n    drawItsPath() {\n        const ctx = this.ctx;\n        const path = this.path;\n        ctx.strokeStyle = 'greenyellow';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        for (let i = 0; i < path.length - 1; i++) {\n            ctx.moveTo((path[i][0] + 0.5) * GRID_SIZE, (path[i][1] + 0.5) * GRID_SIZE);\n            if (path[i + 1]) {\n                ctx.lineTo((path[i + 1][0] + 0.5) * GRID_SIZE, (path[i + 1][1] + 0.5) * GRID_SIZE);\n            }\n        }\n        ctx.stroke();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/Enemy.js","/**\n * 地图上不同种类的 grid 的标记\n * DEFAULT: 默认状态，enemy 能够通过，能够放置 tower\n * BLOCK: 障碍物，enemy 不能通过，不能放置 tower\n * PLATFORM: 平台，enemy 不能通过，但能放置 tower  \n * PATH: enemy 通行的道路，不能放置 tower\n */\n\nimport { GRID_SIZE, gridNumX, gridNumY, OFFSET_X, OFFSET_Y } from './../utils/constant';\nimport Path from './Path';\nimport { highlightGrid, drawGrid, index2Px, px2Index } from '../utils/utils';\nimport { Graph, BreadthFirstSearch } from '../utils/BreadthFirstSearch';\nimport globalId from './../id';\nimport TowerFactory from './tower/index';\nimport { MAP_SETTING } from '../utils/config';\n\nexport default class Map {\n    constructor(opt) {\n        this.ctx = opt.ctx;\n        this.newTowerCoord = opt.newTowerCoord || null;\n        this.orbit = opt.orbit;\n        this.WIDTH = opt.WIDTH;\n        this.HEIGHT = opt.HEIGHT;\n        \n        this.coord = [];\n\n        for (let i = 0; i < gridNumX; i++) {\n            this.coord[i] = [];\n        }\n\n        // 初始状态下的塔\n        if (this.newTowerCoord) {\n            const [col, row] = this.newTowerCoord;\n            this.coord[col][row] = 'T';\n        }\n        // Create an instance of Path object\n        this.path = new Path({\n            ctx: this.ctx,\n            radius: GRID_SIZE / 2,\n            orbit: this.orbit\n        });\n\n\n        // 初始化坐标\n        const game = opt.game;\n        this.game = game;\n\n        const mapSetting = MAP_SETTING[game.stage];\n        if (mapSetting) {\n            /* 默认情况下路径以给出的 orbit 为准，如果存在 mapSetting，则重新寻找路径 */\n            const blockArray = MAP_SETTING[game.stage].BLOCK;\n            blockArray.forEach(block => {\n                const [col, row] = block;\n                this.coord[col][row] = 'B';\n                const { x, y } = index2Px(col, row);\n                const id = globalId.genId();\n                const config = { id, ctx: this.ctx, x, y };\n                const tower = new TowerFactory['BLOCK'](config);\n                game.towers.push(tower);\n            });\n            \n            this.findPath();\n        } else {\n            this.path.setPoints();\n            this.setMap();\n        }\n    }\n\n    // 设置地图数组\n    // 路径所在位置标识为 'P'\n    setMap() {\n        for (let i = 0; i < gridNumX; i++) {\n            for (let j = 0; j < gridNumY; j++) {\n                // 清除之前的路径标记，0 表示空白方块\n                if (this.coord[i][j] === 'P') {\n                    this.coord[i][j] = 0;\n                }\n            }\n        }\n\n        const path = this.path.orbit;\n        for (let i = 0; i < path.length - 1; i++) {\n            const current = path[i];\n            const next = path[i + 1];\n            if (current[0] === next[0]) {\n                /* x 坐标相等，y 坐标进行变化 */\n                const x = current[0];\n\n                const minY = Math.max(Math.min(current[1], next[1]), 0);\n                const maxY = Math.min(Math.max(current[1], next[1]), gridNumY);\n\n                for (let y = minY; y <= maxY; y++) {\n                    this.coord[x][y] = 'P';\n                }\n                \n            } else if (current[1] === next[1]) {\n                /* y 坐标相等，x 坐标进行变化 */\n                const y = current[1];\n\n                const minX = Math.max(Math.min(current[0], next[0]), 0);\n                const maxX = Math.min(Math.max(current[0], next[0]), gridNumX);\n\n                for (let x = minX; x <= maxX; x++) {\n                    this.coord[x][y] = 'P';\n                }\n            }\n        }\n    }\n\n    draw({towers, towerSelect, towerSelectIndex}) {\n        const ctx = this.ctx;\n        const WIDTH = this.WIDTH;\n        const HEIGHT = this.HEIGHT;\n\n        ctx.save();\n\n        // Clear canvas\n        // ctx.fillStyle = '#fff';\n        ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n        ctx.strokeStyle = '#eee';\n        ctx.fillStyle = '#fff';\n        ctx.lineWidth = 1;\n\n        drawGrid(ctx, gridNumX, gridNumY, GRID_SIZE, '#eee', OFFSET_X, OFFSET_Y);\n\n        // 当前选中的格子突出显示\n        if (towerSelect) {\n            const { col, row } = towers[towerSelectIndex];\n            const { x, y } = index2Px(col, row);\n            highlightGrid(ctx, x - GRID_SIZE / 2, y - GRID_SIZE / 2, GRID_SIZE, GRID_SIZE);\n        }\n        // // 空白格子也突出显示\n        // else if (this.selectCoord) {\n        //     const { col, row } = this.selectCoord;\n        //     if (this.coord[col][row] !== 'P') {\n        //         highlightGrid(ctx, col * gridWidth, row * gridHeight, gridWidth, gridHeight);            \n        //     }\n        // }\n\n        ctx.restore();\n\n        this.path.draw();\n    }\n\n\n    // 寻找路径\n    findPath() {\n        const graph = new Graph(gridNumX, gridNumY);\n        this.graph = graph;\n        for (let j = 0; j < gridNumY; j++) {\n            for (let i = 0; i < gridNumX; i++) {\n                // 标记地图中的障碍物\n                if (this.coord[i][j] === 'B' || this.coord[i][j] === 'T') {\n                    graph.walls.push([i, j]);\n                }\n            }\n        }\n\n        const startPoint = this.orbit[0];\n        const endPoint = this.orbit[this.orbit.length - 1];\n        const bfs = new BreadthFirstSearch(graph, endPoint);\n        const pathArr = bfs.findPath(startPoint);\n        this.orbit = [];\n        pathArr.forEach(p => this.orbit.push(p));\n                \n        this.path = new Path({\n            ctx: this.ctx,\n            orbit: this.orbit\n        });\n        \n        // Add points to the path\n        this.path.setPoints();\n        this.setMap();\n    }\n\n    findPointPath([x, y]) {\n        const graph = this.graph;\n\n        const endPoint = this.orbit[this.orbit.length - 1];\n        const bfs = new BreadthFirstSearch(graph, endPoint);\n        const pathArr = bfs.findPath([x, y]);\n\n        return pathArr;\n    }\n\n    /**\n     * 检查在该位置放置障碍物后，起点和终点间是否存在一条路径，\n     * 以及所有的 enemy 是否能够到达终点\n     */\n    checkPath(col, row) {\n        const graph = new Graph(gridNumX, gridNumY);\n        for (let j = 0; j < gridNumY; j++) {\n            for (let i = 0; i < gridNumX; i++) {\n                // 标记地图中的障碍物\n                if (this.coord[i][j] === 'B' || this.coord[i][j] === 'T') {\n                    graph.walls.push([i, j]);\n                }\n            }\n        }\n        graph.walls.push([col, row]);\n\n        const startPoint = this.orbit[0];\n        const endPoint = this.orbit[this.orbit.length - 1];\n        const bfs = new BreadthFirstSearch(graph, endPoint);\n        const startArr = bfs.findPath(startPoint);\n        if (startArr.length === 0) {\n            return false;\n        }\n\n        return this.game.enemies.every(enemy => {\n            const { col, row } = px2Index(enemy.x, enemy.y);\n            if (col === endPoint[0] && row === endPoint[1]) {\n                return true;\n            }\n\n            const pathArr = bfs.findPath([col, row]);\n            return pathArr.length > 0;\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/Map.js","import { GRID_SIZE } from '../utils/constant';\nimport { index2Px } from '../utils/utils';\n\nclass Path {\n    constructor(opt) {\n        this.ctx = opt.ctx;\n        this.radius = opt.radius || GRID_SIZE / 2;\n        this.orbit = opt.orbit;\n        this.points = [];\n    }\n\n    /**\n     * Add a point to path\n    */\n    addPoint(x, y) {\n        this.points.push([x, y]);\n    };\n    \n    // Define path points\n    setPoints() {\n        this.orbit.forEach(coord => {\n            const {x, y} = index2Px(...coord);\n            this.addPoint(x, y);\n        });\n    }\n\n    /**\n     * Render path\n     */\n    draw() {\n        if (this.points.length === 0) {\n            return;\n        }\n        const ctx = this.ctx;\n        const PATH_COLOR = '#333';\n        ctx.save();\n\n        ctx.beginPath();\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = PATH_COLOR;\n        ctx.lineWidth = (this.radius - 1) * 2;\n        ctx.shadowBlur = 0;\n\n        this.points.forEach(point => {\n            ctx.lineTo(point[0], point[1]);\n        });\n\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.fillStyle = PATH_COLOR;\n        const startPoint = this.points[0];\n        ctx.arc(\n            startPoint[0],\n            startPoint[1],\n            this.radius,\n            0 * Math.PI,\n            2 * Math.PI,\n            false\n        );\n        ctx.fill();\n\n        // Draw a line in the middle of the path\n        ctx.strokeStyle = '#111';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        this.points.forEach(point => {\n            ctx.lineTo(point[0], point[1]);\n        });\n        ctx.stroke();\n\n        // 标记终点\n        ctx.beginPath();\n        ctx.fillStyle = 'tomato';\n        const endPoint = this.points[this.points.length - 1];\n        ctx.arc(\n            endPoint[0],\n            endPoint[1],\n            this.radius * 0.6,\n            0 * Math.PI,\n            2 * Math.PI,\n            false\n        );\n        ctx.fill();\n        \n\n        ctx.restore();\n    }\n}\n\nexport default Path;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/Path.js","export class Graph {\n    constructor(w, h) {\n        this.width = w;\n        this.height = h;\n        this.walls = [];    // 障碍物\n    }\n\n    /**\n     * @param {*} node: [x, y] \n     */\n    inBounds(node) {\n        return (0 <= node[0] && node[0] < this.width && 0 <= node[1] && node[1] < this.height);\n    }\n\n    /**\n     * 检查给定的一个点是否上有障碍物\n     * 即给定点的坐标与障碍物数组中的任意元素坐标均不等\n     */\n    passable(node) {\n        const walls = this.walls;\n        return walls.every(wall => {\n            return wall[0] !== node[0] || wall[1] !== node[1];\n        });\n    }\n\n    neighbors(node) {\n        const [x, y] = node;\n        let results = [ [x + 1, y], [x, y - 1], [x - 1, y], [x, y + 1] ];\n        results = results.filter(this.passable, this);\n        results = results.filter(this.inBounds, this);\n        return results;\n    }\n\n    /**\n     * 输出 Graph 的信息\n     * 障碍物所在处标记为'#'，可通过区域标记为'.'\n     */\n    print() {\n        let info = '';\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                if (hasNode.call(this.walls, [i, j])) {\n                    info += '#';\n                } else {\n                    info += '.';\n                }\n            }\n            info += '\\n';\n        }\n        console.log(info);\n    }\n}\n\nclass Queue {\n    constructor() {\n        this.elements = [];\n    }\n\n    empty() {\n        return this.elements.length === 0;\n    }\n\n    put(x) {\n        this.elements.push(x);\n    }\n\n    get() {\n        return this.elements.shift();\n    }\n}\n\nexport class BreadthFirstSearch {\n    // 寻找graph上任一点到start的路径\n    constructor(graph, start) {\n        this.graph = graph;\n        this.width = graph.width;\n        this.height = graph.height;\n        this.start = start;\n\n        const frontier = new Queue;\n        frontier.put(start);\n\n        const visited = [start];\n\n        this.cameFrom = [];\n        this.distance = [];\n        for (let i = 0; i < this.width; i++) {\n            this.cameFrom[i] = [];\n            this.distance[i] = [];\n            for (let j = 0; j < this.height; j++) {\n                this.cameFrom[i][j] = null;\n                this.distance[i][j] = -1;\n            }\n        }\n\n        let current;\n        let curNeighbors = [];\n\n        while (!frontier.empty()) {\n            current = frontier.get();\n\n            curNeighbors = graph.neighbors(current);\n            curNeighbors.forEach(next => {\n                if (!hasNode.call(visited, next)) {\n                    frontier.put(next);\n                    visited.push(next);\n                    const [x, y] = next;\n                    this.cameFrom[x][y] = current;\n                    this.distance[x][y] = this.distance[current[0]][current[1]] + 1;\n                }\n            });\n        }\n    }\n\n    showPath() {\n        let info = '';\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                if (hasNode.call(this.graph.walls, [i, j])) {\n                    info += '#\\t\\t';\n                } else {\n                    info += this.cameFrom[i][j] + '\\t\\t';\n                }\n            }\n            info += '\\n';\n        }\n        console.log(info);\n    }\n\n    showDistance() {\n        let info = '';\n        for (let j = 0; j < this.height; j++) {\n            for (let i = 0; i < this.width; i++) {\n                if (hasNode.call(this.graph.walls, [i, j])) {\n                    info += '#\\t';\n                } else {\n                    info += this.distance[i][j] + '\\t';\n                }\n            }\n            info += '\\n';\n        }\n        console.log(info);\n    }\n\n    /**\n     * 最后生成的路径数组中，node为第一个元素，this.start为最后一个元素\n     */ \n    findPath(node) {\n        const path = [];\n        let [curX, curY] = node;\n        // 如果需要查询的 node 恰等于 start，则将 start 返回\n        if (curX === this.start[0] && curY === this.start[1]) {\n            return [[curX, curY]];\n        }\n        if (this.cameFrom[curX][curY] === null) { \n            return []; \n        } \n        path.push(node);\n        while (curX !== this.start[0] || curY !== this.start[1]) {\n            const [x, y] = this.cameFrom[curX][curY];\n            path.push([x, y]);\n            curX = x;\n            curY = y;\n        }\n        return path;\n    }\n}\n\n/**\n * 用于检查一个数组中是否存在 arr\n * @param {array} node 是一个形如 [x, y] 的数组\n * 调用：hasNode.call(array, node)\n */\nfunction hasNode(node) {\n    return this.some(item => item[0] === node[0] && item[1] === node[1]);\n}\n\nfunction removeNode(node) {\n    const index = this.find(item => item[0] === node[0] && item[1] === node[1]);\n    if (index >= 0) {\n        this.splice(index, 1);\n        return true;\n    }\n    return false;    \n}\n\n// const g = new Graph(10, 10);\n// var walls = [[1, 7], [1, 8], [2, 7], [2, 8], [3, 7], [3, 8], [0,0],[6,2], [6,3], [6,4]];\n// for (var i = 0; i < walls.length; i++) {\n//     g.walls.push(walls[i]);\n// }\n// g.print();\n\n// var bfs = new BreadthFirstSearch(g, [5,8]);\n// bfs.showDistance();\n// bfs.showPath();\n// var path11 = bfs.findPath([1,1]);\n// console.log(path11);\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/BreadthFirstSearch.js","export default class Wave {\n    constructor(opt = {}) {\n        //\n        this.enemyInitCnt = opt.enemyInitCnt || {\n            a: 10,\n            b: 5,\n            c: 10\n        };\n\n        this.enemyCnt = {};\n        Object.keys(this.enemyInitCnt).forEach(key => {\n            this.enemyCnt[key] = this.enemyInitCnt[key];\n        });\n\n        this.enemyCfg = {\n            a: {\n                radius: 10,\n                speed: 1,\n                color: '#FFDDA0',\n                health: 20,\n            },\n            b: {\n                radius: 8,\n                speed: 1.5,\n                color: '#0280B2',\n                health: 16,\n            },\n            c: {\n                radius: 6,\n                speed: 2,\n                color: '#FFD387',\n                health: 12\n            }\n        };\n    }\n\n    waveFinish() {\n        const keys = Object.keys(this.enemyCnt);\n        return keys.every(key => {\n            return this.enemyCnt[key] <= 0;\n        });\n    }\n\n    generateEnemy() {\n        if (this.waveFinish()) {\n            return -1;\n        } else {\n            const keys = Object.keys(this.enemyCnt);\n            for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n                if (this.enemyCnt[key] > 0) {\n                    this.enemyCnt[key]--;\n                    return this.enemyCfg[key];\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Wave.js","// 在画面上显示信息\n\n// 属性：\n// 文字内容\n// 位置，大小\n// 颜色\n// type: 提示信息和错误信息需要显示在不同的 canvas 层上 \n\nconst canvas = document.getElementById('error-message');\nconst ctx = canvas.getContext('2d');\n\nclass Message {\n    constructor(opt) {\n        this.text = opt.text;\n        this.x = opt.x || 0;\n        this.y = opt.y || canvas.height - 15;\n        this.width = opt.width || 0;\n        this.height = opt.height || 0;\n\n        this.life = 2000;   // 信息存在的时长\n        this.startTime = new Date().getTime();  // 信息开始显示的时间\n\n        this.vanish = false;\n    }\n\n    draw() {\n        if (new Date().getTime() - this.startTime > this.life) {\n            this.vanish = true;\n        }\n\n        if (this.vanish) {\n            return;\n        }\n\n        ctx.fillStyle = 'red';\n        ctx.font = '20px Arial';\n\n        if (this.text) {\n            ctx.fillText(this.text, 50, this.y);\n        }\n    }\n}\n\n\nexport default Message;\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/Message.js","import { BaseTower, LaserTower, SlowTower, FireTower, Block } from './tower';\nimport { isInside, highlightGrid, drawGrid } from './../utils/utils';\nimport { GAME_CONTROL_WIDTH, GAME_CONTROL_HEIGHT, towerData } from '../utils/constant';\n\nconst GRID_WIDTH = 60;\nconst GRID_HEIGHT = 60;\nconst GRID_NUM_X = 3;\nconst GRID_NUM_Y = 2;\nconst WIDTH = GAME_CONTROL_WIDTH;   // 230\nconst HEIGHT = GAME_CONTROL_HEIGHT; // 640\n\nconst FILL_COLOR = '#fafafa';\nconst DISABLE_COLOR = '#aaa';\nconst HOVER_COLOR = 'red';\n\n// 每一个子数组代表一列\nconst TOWER_TYPE = [\n    ['BASE', 'FIRE'],\n    ['LASER'],\n    ['SLOW', 'BLOCK']\n];\n\nclass GameControl {\n    constructor(opt) {\n        this.option = Object.assign(\n            {\n                offsetX: 25,\n                offsetY: 25\n            },\n            opt\n        );\n\n        const element = this.option.element;\n        this.game = opt.game;\n\n        element.width = WIDTH;\n        element.height = HEIGHT;\n        this.element = element;\n\n        this.ctx = element.getContext('2d');\n        this.offsetX = this.option.offsetX;\n        this.offsetY = this.option.offsetY;\n\n        this.towerAreaRect = {\n            x: this.offsetX,\n            y: this.offsetY,\n            width: GRID_NUM_X * GRID_WIDTH,\n            height: GRID_NUM_Y * GRID_HEIGHT\n        };\n\n        const commonBtnProp = {\n            x: this.offsetX,\n            width: 100,\n            height: 40,\n            status: ''\n        };\n\n        this.pauseBtn = {\n            y: 350,\n            text: '暂停',\n            ...commonBtnProp\n        };\n\n        this.upgradeBtn = {\n            y: 410,\n            text: '升级',\n            disable: true,\n            ...commonBtnProp\n        };\n\n        this.sellBtn = {\n            y: 470,\n            text: '出售',\n            disable: true,\n            ...commonBtnProp\n        };\n\n        this.towerArea = new TowerArea({\n            ctx: this.ctx,\n            x: this.offsetX,\n            y: this.offsetY\n        });\n\n        this.bindEvent();\n    }\n\n    draw() {\n        // 游戏未开始时，不绘制该区域\n        if (this.game.status === '') { \n            return; \n        }\n    \n        const ctx = this.ctx;\n        // ctx.fillStyle = '#eee';\n        ctx.fillStyle = '#010c12';\n        ctx.fillRect(0, 0, WIDTH, HEIGHT);\n        this.drawGrid();\n\n        if (this.game.mode !== 'ADD_TOWER') {\n            this.towerArea.selected = -1;\n        }\n        this.towerArea.draw();\n        this.drawText();\n        this.drawButton();\n        this.drawSelectedTowerInfo();\n\n        this.animId = requestAnimationFrame(() => this.draw());\n    }\n\n    // Not used?\n    stopAnim() {\n        cancelAnimationFrame(this.animId);\n        const ctx = this.ctx;\n        ctx.fillStyle = '#010c12';\n        ctx.fillRect(0, 0, WIDTH, HEIGHT);\n    }\n\n    drawGrid() {\n        const ctx = this.ctx;\n        ctx.strokeStyle = '#000';\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(WIDTH, 0);\n        ctx.lineTo(WIDTH, HEIGHT);\n        ctx.lineTo(0, HEIGHT);\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    drawText() {\n        const ctx = this.ctx;\n        const game = this.game;\n        ctx.fillStyle = FILL_COLOR;\n        ctx.font = '20px Arial';\n        ctx.fillText(`第 ${game.wave + 1} 波`, this.offsetX, 200);\n        ctx.fillText(`生命: ${game.life}`, this.offsetX, 240);\n        ctx.fillText('得分: ' + game.score, this.offsetX, 280);\n        ctx.fillText('金钱: ' + game.money, this.offsetX, 320);\n    }\n\n    drawButton() {\n        const ctx = this.ctx;\n\n        [this.sellBtn, this.upgradeBtn].forEach(b => b.disable = !this.game.towerSelect);\n\n        [this.pauseBtn, this.sellBtn, this.upgradeBtn].forEach(btn => {\n            if (btn.disable) {\n                /* 按钮当前处于不可用状态 */\n                ctx.strokeStyle = DISABLE_COLOR;\n                ctx.fillStyle = DISABLE_COLOR;\n            } else if (btn.status === 'hover') {\n                ctx.strokeStyle = HOVER_COLOR;\n                ctx.fillStyle = HOVER_COLOR;\n            } else {\n                ctx.strokeStyle = FILL_COLOR;\n                ctx.fillStyle = FILL_COLOR;\n            }\n            ctx.strokeRect(btn.x, btn.y, btn.width, btn.height);\n            ctx.fillText(btn.text, btn.x + btn.width / 3.5, btn.y + btn.height / 1.6);\n        });\n    }\n\n    drawSelectedTowerInfo() {\n        const game = this.game;\n        if (!game.towerSelect) {\n            return;\n        }\n        const ctx = this.ctx;\n        const tower = game.towers[game.towerSelectIndex];\n\n        ctx.fillStyle = FILL_COLOR;\n        ctx.font = '18px Arial';\n        ctx.fillText(`当前等级: ${tower.level}`, this.offsetX, 560);\n        ctx.fillText(`攻击: ${tower.damage.toFixed(2)}`, this.offsetX, 585);\n    }\n\n    // 在游戏的控制区域绑定事件\n    bindEvent() {\n        const $element = $(this.option.element);\n        const game = this.game;\n        let x = 0;\n        let y = 0;\n\n        // 点击事件的绑定\n        $element.click(e => {\n            const $canvas = $(e.target);\n            const offset = $canvas.offset();\n            x = e.clientX - offset.left;\n            y = e.clientY - offset.top;\n\n            // 检查点击位置是否在 tower area 内\n            if (isInside({ x, y }, this.towerAreaRect)) {\n                const xIdx = Math.floor((x - this.offsetX) / GRID_WIDTH);\n                const yIdx = Math.floor((y - this.offsetY) / GRID_HEIGHT);\n\n                if (TOWER_TYPE[xIdx][yIdx]) {\n                    if (game.mode === 'ADD_TOWER' && game.addTowerType === TOWER_TYPE[xIdx][yIdx]) {\n                        /* 添加塔模式下，点击同一种类的塔，则取消添加状态 */\n                        game.mode = '';\n                        game.addTowerType = '';\n                    } else {\n                        /* 进入添加塔模式，或切换塔的种类 */\n                        game.mode = 'ADD_TOWER';\n                        game.addTowerType = TOWER_TYPE[xIdx][yIdx];\n                        this.towerArea.selected = [xIdx, yIdx];\n                    }\n                }\n            } else {\n                this.towerArea.selected = -1;\n            }\n\n            if (isInside({ x, y }, this.pauseBtn)) {\n                this.pauseBtn.text = game.status === 'running' ? '继续' : '暂停';\n                game.status = game.status === 'running' ? 'pause' : 'running';\n                if (game.status === 'running') {\n                    game.draw();\n                }\n            }\n\n            if (isInside({ x, y }, this.sellBtn)) {\n                if (game.towerSelect === true) {\n                    console.log('you sell a tower');\n                    game.sellTower();\n                }\n            }\n\n            if (isInside({ x, y }, this.upgradeBtn)) {\n                if (game.towerSelect === true) {\n                    game.upgradeTower();\n                }\n            }\n        });\n\n        // hover 事件的绑定\n        $element.mousemove(e => {\n            // e.stopPropagation()\n            const gameInfo = this.game.gameInfo;\n            const pauseBtn = this.pauseBtn;\n            const sellBtn = this.sellBtn;\n\n            const $canvas = $(e.target);\n            const offset = $canvas.offset();\n            x = e.clientX - offset.left;\n            y = e.clientY - offset.top;\n\n            // 鼠标hover在暂停按钮上\n            if (isInside({ x, y }, pauseBtn)) {\n                pauseBtn.status = 'hover';\n            } else {\n                pauseBtn.status = '';\n            }\n\n            if (isInside({ x, y }, sellBtn)) {\n                sellBtn.status = 'hover';\n            } else {\n                sellBtn.status = '';\n            }\n\n            // 鼠标 hover 在 tower 上时，显示相应提示信息\n            if (isInside({ x, y }, this.towerAreaRect)) {\n                const col = Math.floor((x - this.offsetX) / GRID_WIDTH);\n                const row = Math.floor((y - this.offsetY) / GRID_HEIGHT);\n\n                let infoX = this.offsetX + col * GRID_WIDTH - 100;\n\n                const towerType = TOWER_TYPE[col][row];\n                const text = [];\n                if (towerType) {\n                    const data = towerData[towerType];\n                    const tower = this.towerArea.towers[towerType];\n                    text.push(data.info);\n                    text.push(`造价: ${data.cost}`);\n                    text.push(`攻击: ${tower.damage}`);\n                }\n                // TODO: 修改此处，使其更通用\n                if (row === 0 && col === 2) {\n                    infoX -= 120;\n                } else if (row === 1 && col === 0) {\n                    infoX -= 50;\n                }\n\n                gameInfo.infos = [{\n                    x: infoX,\n                    y: this.offsetY + row * GRID_HEIGHT,\n                    width: 200,\n                    height: 50,\n                    text\n                }];\n\n            } else {\n                gameInfo.infos = [];\n            }\n        });\n    }\n}\n\nexport default GameControl;\n\nclass TowerArea {\n    constructor(opt) {\n        this.ctx = opt.ctx;\n        this.selected = -1;\n        this.offsetX = opt.x;\n        this.offsetY = opt.y;\n\n        const baseTower = new BaseTower({\n            x: this.offsetX + GRID_WIDTH / 2 + 10,\n            y: this.offsetY + GRID_HEIGHT / 2,\n            ctx: this.ctx,\n            radius: 12\n        });\n\n        const laserTower = new LaserTower({\n            x: this.offsetX + GRID_WIDTH * 1.5 + 5,\n            y: this.offsetY + GRID_HEIGHT / 2,\n            ctx: this.ctx,\n            direction: 90,\n            radius: 10\n        });\n\n        const slowTower = new SlowTower({\n            x: this.offsetX + GRID_WIDTH * 2.5 + 5,\n            y: this.offsetY + GRID_HEIGHT / 2,\n            ctx: this.ctx,\n            radius: 12\n        });\n\n        const fireTower = new FireTower({\n            x: this.offsetX + GRID_WIDTH / 2 + 5,\n            y: this.offsetY + GRID_HEIGHT * 1.5,\n            ctx: this.ctx,\n            radius: 10\n        });\n\n        const block = new Block({\n            x: this.offsetX + GRID_WIDTH * 2.5,\n            y: this.offsetY + GRID_HEIGHT * 1.5,\n            ctx: this.ctx,\n            radius: 0\n        });\n\n        this.towers = {\n            BASE: baseTower,\n            LASER: laserTower,\n            SLOW: slowTower,\n            FIRE: fireTower,\n            BLOCK: block\n        };\n    }\n\n    draw() {\n        const ctx = this.ctx;\n        ctx.strokeStyle = FILL_COLOR;\n        ctx.lineWidth = 1;\n\n        drawGrid(ctx, GRID_NUM_X, GRID_NUM_Y, GRID_WIDTH, FILL_COLOR, this.offsetX, this.offsetY);\n\n        if (this.selected !== -1) {\n            this.highlightTower(this.selected[0], this.selected[1]);\n        }\n\n        Object.keys(this.towers).forEach(key => {\n            this.towers[key].draw(ctx);\n        });\n    }\n\n\n    highlightTower(col, row) {\n        const x = col * GRID_WIDTH + this.offsetX;\n        const y = row * GRID_HEIGHT + this.offsetY;\n        highlightGrid(this.ctx, x, y, GRID_WIDTH, GRID_HEIGHT);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/GameControl.js","import { WIDTH, HEIGHT, GAME_CONTROL_WIDTH } from '../utils/constant';\n\nclass GameInfo {\n    constructor(opt) {\n        this.element = opt.element;\n        this.game = opt.game;\n\n        this.element.width = WIDTH + GAME_CONTROL_WIDTH;\n        this.element.height = HEIGHT;\n\n        this.infos = [{\n            x: 100,\n            y: 100,\n            width: 100,\n            height: 100,\n        }];\n\n        this.count = 0;\n    }\n\n    draw() {\n        setTimeout(() => this.draw(), 300);\n\n        // 游戏未开始时，不显示提示信息\n        if (this.game.status === '') {\n            return;\n        }\n\n        const infos = this.infos;\n        const ctx = this.element.getContext('2d');\n    \n        ctx.fillStyle = 'rgba(255, 255, 255, 0)';\n        ctx.clearRect(0, 0, this.element.width, this.element.height);\n\n        infos.forEach(info => {\n            // const rect = [info.x, info.y, info.width, info.height];\n            ctx.font = '20px Arial';\n\n            if (info.text && info.text.length > 0) {\n                ctx.save();\n                ctx.fillStyle = 'rgba(0, 255, 0, 0.2)';\n                // 确定信息显示的位置\n                const textStartX = info.x + WIDTH;\n                // 确定信息的宽度\n                const textWidth = ctx.measureText(info.text).width;\n                // 画出信息显示时的背景\n                ctx.fillRect(textStartX - 20, info.y - 25, textWidth + 40, 30 * info.text.length);\n                \n                ctx.fillStyle = 'rgba(255, 255, 255, 1)';\n                info.text.forEach((t, idx) => {\n                    const y = info.y + idx * 25;\n                    ctx.fillText(t, textStartX, y);\n                });\n\n                ctx.restore();\n            }\n        });\n    }\n}\n\n\nexport default GameInfo;\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/GameInfo.js","import { WIDTH, HEIGHT, GAME_CONTROL_WIDTH } from '../utils/constant';\nimport EntityCollection from '../EntityCollection';\n\n/** \n * 显示在游戏画面左下角的错误信息\n*/\nclass GameError {\n    constructor(opt) {\n        this.element = opt.element;\n        this.game = opt.game;\n\n        this.element.width = WIDTH + GAME_CONTROL_WIDTH;\n        this.element.height = HEIGHT;\n\n        this.messages = new EntityCollection();\n    }\n\n    draw() {\n        const messages = this.messages;\n        const canvas = this.element;\n        const ctx = canvas.getContext('2d');\n    \n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        this.messages = messages.filter(msg => !msg.vanish);\n        this.messages.forEach((msg, index) => {\n            // 不同的消息在 y 方向上叠加\n            // TODO: y 方向的数值需要改变\n            msg.y = canvas.height - 15 - index * 30; \n            msg.draw();\n        });\n\n        setTimeout(() => {\n            this.draw();\n        }, 200);\n    }\n}\n\n\nexport default GameError;\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity/GameError.js","import beep from '../../assets/audios/short.mp3';\n\n\nexport const beepAudio = new Audio(beep);\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/audio.js","module.exports = __webpack_public_path__ + \"46cf373e4666b35178b0986a5d2b34b5.mp3\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/audios/short.mp3\n// module id = 40\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/style/index.less\n// module id = 41\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  background: #eee;\\n  background: #010c12;\\n}\\nmain {\\n  display: flex;\\n  /*border: 1px solid;*/\\n}\\ncanvas#background {\\n  position: absolute;\\n  z-index: 0;\\n}\\ncanvas#drawing {\\n  border: 6px #333 solid;\\n  border-right: none;\\n  z-index: 1;\\n}\\ncanvas#game-control {\\n  border: 6px #333 solid;\\n  border-left: none;\\n  position: absolute;\\n}\\ncanvas#game-info {\\n  z-index: 3;\\n  pointer-events: none;\\n}\\ncanvas#error-message {\\n  z-index: 3;\\n  pointer-events: none;\\n  width: 1030px;\\n  height: 650px;\\n}\\n#add-tower {\\n  display: flex;\\n}\\n.add-tower-pic {\\n  width: 50px;\\n  height: 50px;\\n  background-color: #fff;\\n  display: inline-block;\\n  margin-left: 20px;\\n  border: 1px solid #000;\\n}\\n.ui {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 10px;\\n  color: #999;\\n  text-align: left;\\n  padding: 8px;\\n  background-color: rgba(0, 0, 0, 0.6);\\n}\\n#panels {\\n  width: 100%;\\n  position: absolute;\\n  z-index: 3;\\n  display: none;\\n}\\n#message {\\n  padding: 16px;\\n  margin-top: 10px;\\n  width: 300px;\\n}\\n.ui h2 {\\n  font-size: 24px;\\n  margin-bottom: 20px;\\n  color: #eee;\\n}\\n.ui ul {\\n  margin: 10px 0;\\n}\\n.ui ul li {\\n  margin: 0 0 2px 0;\\n}\\n.ui a {\\n  outline: none;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 38px;\\n  text-decoration: none;\\n  color: #bbb;\\n  display: block;\\n  transition: all .18s linear;\\n}\\n.ui a:hover {\\n  color: #fff;\\n  background-color: #000;\\n  transition: all .18s linear;\\n}\\n#choose-stage {\\n  width: 1030px;\\n  height: 640px;\\n  z-index: 10;\\n  color: #fff;\\n  text-align: center;\\n  background: #00080e;\\n  background: radial-gradient(#004646, #00080e);\\n}\\n.choose-stage-button {\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 38px;\\n  color: #bbb;\\n  text-decoration: none;\\n  display: block;\\n  transition: all .18s linear;\\n  margin: 20px 0;\\n  padding: 10px 0;\\n}\\n.choose-stage-button:first-of-type {\\n  margin-top: 80px;\\n}\\n.choose-stage-button:hover {\\n  background-color: #000;\\n  transition: all .18s linear;\\n}\\n/* 游戏顶部状态信息 */\\n#status {\\n  width: 780px;\\n  height: 15px;\\n  padding: 8px;\\n  display: none;\\n  position: absolute;\\n  z-index: 2;\\n}\\n#status span {\\n  color: #bbb;\\n  font-weight: bold;\\n  margin-right: 5px;\\n}\\n#status .fps {\\n  float: right;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/less-loader/dist/cjs.js!./src/style/index.less\n// module id = 42\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 43\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tvar styleTarget = fn.call(this, selector);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[selector] = styleTarget;\n\t\t}\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/addStyles.js\n// module id = 44\n// module chunks = 0","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/style-loader/lib/urls.js\n// module id = 45\n// module chunks = 0"],"sourceRoot":""}