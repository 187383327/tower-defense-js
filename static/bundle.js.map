{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap 6ff765490993a1cad4b3","webpack:///./src/index.js","webpack:///./src/Game.js","webpack:///./~/.2.3.2@gl-matrix/src/gl-matrix/vec2.js","webpack:///./~/.2.3.2@gl-matrix/src/gl-matrix/common.js","webpack:///./src/Entity/Path.js","webpack:///./src/Entity/Vehicle.js","webpack:///./src/config.js","webpack:///./src/Entity/SimpleTower.js","webpack:///./src/Entity/Bullet.js","webpack:///./src/utils/utils.js","webpack:///./src/constant.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6ff765490993a1cad4b3","'use strict';\n\nvar _Game = require('./Game');\n\nvar _Game2 = _interopRequireDefault(_Game);\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar game = new _Game2.default();\n\nvar addTowerBlock = document.getElementById('add-tower');\naddTowerBlock.addEventListener('click', function () {\n    game.mode = game.mode === 'ADD_TOWER' ? '' : 'ADD_TOWER';\n});\n\nvar canvas = document.getElementById(\"drawing\");\n\n// 在canvas上进行右键操作\ncanvas.oncontextmenu = function (e) {\n    game.mode = '';\n    e.preventDefault();\n    console.log(game.score);\n};\n\ndocument.onmousemove = function (e) {\n    if (game.mode === 'ADD_TOWER') {\n        game.cursorX = e.pageX;\n        game.cursorY = e.pageY;\n        var rect = canvas.getBoundingClientRect();\n        var x = e.clientX - rect.left;\n        var y = e.clientY - rect.top;\n        game.coordX = Math.floor(x / _constant.gridWidth);\n        game.coordY = Math.floor(y / _constant.gridHeight);\n    }\n};\n\ndocument.onclick = function (e) {\n    if (game.mode === 'ADD_TOWER') {\n        var rect = canvas.getBoundingClientRect();\n\n        var x = e.clientX - rect.left;\n        var y = e.clientY - rect.top;\n\n        game.createNewTower(Math.floor(x / _constant.gridWidth) * _constant.gridWidth + _constant.gridWidth / 2, Math.floor(y / _constant.gridWidth) * _constant.gridWidth + _constant.gridWidth / 2);\n    }\n};\n\nvar vehicleCountNode = document.createElement(\"p\");\nvehicleCountNode.setAttribute(\"id\", \"vehicleCount\");\nvar textnode = document.createTextNode('Vehicle Count: ' + game.vehicles.length);\nvehicleCountNode.appendChild(textnode);\ndocument.body.appendChild(vehicleCountNode);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vec = require('gl-matrix/src/gl-matrix/vec2');\n\nvar _vec2 = _interopRequireDefault(_vec);\n\nvar _Path = require('./Entity/Path.js');\n\nvar _Path2 = _interopRequireDefault(_Path);\n\nvar _Vehicle = require('./Entity/Vehicle.js');\n\nvar _Vehicle2 = _interopRequireDefault(_Vehicle);\n\nvar _SimpleTower = require('./Entity/SimpleTower.js');\n\nvar _SimpleTower2 = _interopRequireDefault(_SimpleTower);\n\nvar _utils = require('./utils/utils');\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WIDTH = 800;\nvar HEIGHT = 640;\nvar canvas = document.getElementById(\"drawing\");\nvar ctx = canvas.getContext(\"2d\");\n\nvar Game = function () {\n    function Game() {\n        _classCallCheck(this, Game);\n\n        // Init\n        canvas.width = WIDTH;\n        canvas.height = HEIGHT;\n\n        // Create an instance of Path object\n        this.path = new _Path2.default(ctx);\n        // Set path radius\n        this.path.radius = _constant.gridWidth / 2;\n\n        this.vehicles = [];\n        this.bullets = [];\n        this.towers = [];\n\n        this.coordX = 0;\n        this.coordY = 0;\n\n        this.vehicleCreatedCount = 0; // 目前已经创建的vehicle的总数\n        this.lastCreatedVehicleTime = new Date();\n\n        var newTowerCoord = [8, 8];\n        this.simpleTower = new _SimpleTower2.default(ctx, _constant.gridWidth / 2 + newTowerCoord[0] * _constant.gridWidth, _constant.gridHeight / 2 + newTowerCoord[1] * _constant.gridHeight, this.bullets);\n        this.towers.push(this.simpleTower);\n\n        this.mode = '';\n\n        this.map = [];\n        for (var i = 0; i < 10; i++) {\n            this.map[i] = [];\n        }\n\n        this.pathCoord = [[0, 0], [18, 0], [18, 4], [10, 4], [10, 10], [16, 10], [16, 14], [-6, 14]];\n\n        this.score = 0;\n\n        // Add points to the path\n        this.setPoints();\n\n        this.draw();\n    }\n\n    // Define path points\n\n\n    _createClass(Game, [{\n        key: 'setPoints',\n        value: function setPoints() {\n            // Set path offset\n            // const offset = HEIGHT / 10;\n\n            // this.path.addPoint(offset, offset);\n            // this.path.addPoint(offset * 3, offset);\n            // this.path.addPoint(offset * 3, offset * 6);\n            // this.path.addPoint(offset * 6, offset * 6);\n            // this.path.addPoint(offset * 6, offset);\n            // this.path.addPoint(WIDTH - offset, offset);\n            // this.path.addPoint(WIDTH - offset, offset * 5);\n            // this.path.addPoint(WIDTH - offset - 200, offset * 5);\n            // this.path.addPoint(WIDTH - offset - 200, offset * 7);\n            // this.path.addPoint(WIDTH - offset, offset * 7);\n            // this.path.addPoint(WIDTH - offset, HEIGHT - offset);\n            // this.path.addPoint(0, HEIGHT - offset);\n            // this.path.addPoint(-100, HEIGHT - offset);\n\n            for (var i = 0, len = this.pathCoord.length; i < len; i++) {\n                var coord = this.pathCoord[i];\n                this.path.addPoint(40 * coord[0] + 20, 40 * coord[1] + 20);\n            }\n            // this.path.addPoint(-100, HEIGHT - offset);\n        }\n\n        // Specify what to draw\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            var _this = this;\n\n            // Clear canvas\n\n            ctx.fillStyle = '#000';\n            ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n            // \n            this.drawMap();\n\n            // Render the path\n            this.path.display();\n\n            // 总数小于50，且间隔1000ms以上\n            if (this.vehicleCreatedCount < 100 && new Date() - this.lastCreatedVehicleTime > 1000) {\n                var mass = Math.random() * 3 + 3;\n\n                var vehicle = new _Vehicle2.default(_vec2.default.fromValues(_constant.gridWidth / 2 + (Math.random() - 0.5) * 5, _constant.gridHeight / 2 + (Math.random() - 0.5) * 5), mass, ctx);\n\n                this.vehicles.push(vehicle);\n                this.vehicleCreatedCount++;\n                this.lastCreatedVehicleTime = new Date();\n            }\n\n            for (var i = 0; i < this.vehicles.length; i++) {\n                this.vehicles[i].applyBehaviors(this.vehicles, this.path);\n                this.vehicles[i].run();\n\n                if (this.vehicles[i].dead === true) {\n                    this.vehicles.remove(i);\n                    i--;\n                }\n            }\n\n            // Draw our tower\n            for (var _i = 0, len = this.towers.length; _i < len; _i++) {\n                this.towers[_i].draw(ctx);\n            }\n\n            // 检查bullet是否与vehicle相撞\n            this.detectImpact();\n\n            // 移除出界的bullet，画出剩下的bullet\n            for (var _i2 = 0; _i2 < this.bullets.length; _i2++) {\n                if (this.bullets[_i2].start[0] < 0 || this.bullets[_i2].start[1] < 0 || this.bullets[_i2].start[0] > WIDTH || this.bullets[_i2].start[1] > HEIGHT) {\n                    this.bullets.remove(_i2);\n                    _i2--;\n                } else {\n                    this.bullets[_i2].draw(ctx);\n                }\n            }\n\n            if (document.getElementById('vehicleCount')) {\n                document.getElementById('vehicleCount').innerHTML = 'Vehicle Count: ' + this.vehicles.length + ', Bullets: ' + this.bullets.length;\n            }\n\n            if (this.mode === 'ADD_TOWER') {\n                // this.drawGhostTower(ctx, this.cursorX, this.cursorY);\n                console.log(this.coordX, this.coordY);\n                this.drawGhostTower(ctx, this.coordX * _constant.gridWidth + _constant.gridWidth / 2, this.coordY * _constant.gridHeight + _constant.gridHeight / 2);\n            }\n\n            // 画面右侧信息的显示\n            document.getElementById('score').innerHTML = 'Score: ' + this.score;\n\n            requestAnimationFrame(function () {\n                return _this.draw();\n            }, 100);\n        }\n\n        // 循环检测bullet是否和vehicle碰撞\n\n    }, {\n        key: 'detectImpact',\n        value: function detectImpact() {\n            for (var i = 0; i < this.bullets.length; i++) {\n                var impact = false;\n                for (var j = 0; j < this.vehicles.length; j++) {\n\n                    // 求圆心至bullet的垂足\n                    var normal = _vec2.default.create();\n                    var bVec = this.bullets[i].directionVec;\n                    var aDotB = 1;\n\n                    var aVec = _vec2.default.fromValues(this.vehicles[j].location[0] - this.bullets[i].start[0], this.vehicles[j].location[1] - this.bullets[i].start[1]);\n                    _vec2.default.multiply(aDotB, aVec, bVec);\n                    _vec2.default.scale(bVec, bVec, aDotB);\n                    _vec2.default.add(normal, this.bullets[i].start, bVec);\n\n                    var distance = (0, _utils.calcuteDistance)(normal[0], normal[1], this.vehicles[j].location[0], this.vehicles[j].location[1]);\n\n                    if (distance <= this.vehicles[j].radius) {\n                        impact = true;\n                        this.vehicles.remove(j);j--;\n                        this.score += 100;\n                        break;\n                    }\n                }\n                if (impact) {\n                    this.bullets.remove(i);i--;\n                }\n            }\n        }\n    }, {\n        key: 'createNewTower',\n        value: function createNewTower(x, y) {\n            var tower = new _SimpleTower2.default(ctx, x, y, this.bullets);\n            this.towers.push(tower);\n        }\n    }, {\n        key: 'drawGhostTower',\n        value: function drawGhostTower(ctx, x, y, towerType) {\n            var tower = new _SimpleTower2.default(ctx, x, y, this.bullets);\n            tower.draw(ctx);\n        }\n    }, {\n        key: 'drawMap',\n        value: function drawMap() {\n            ctx.save();\n            ctx.strokeStyle = '#fff';\n            ctx.fillStyle = '#010101';\n            ctx.lineWidth = 1;\n            ctx.fillRect(0, 0, WIDTH, HEIGHT);\n            // 横纵数目相等\n            var size = 20;\n\n            // ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            ctx.beginPath();\n            // Draw vertical lines\n            for (var i = 0; i < size + 1; i++) {\n                ctx.moveTo(i * _constant.gridWidth, 0);\n                ctx.lineTo(i * _constant.gridWidth, size * _constant.gridHeight);\n            }\n            ctx.stroke();\n\n            // Draw horizontal lines\n            for (i = 0; i < size + 1; i++) {\n                ctx.moveTo(0, i * _constant.gridWidth);\n                ctx.lineTo(size * _constant.gridWidth, i * _constant.gridWidth);\n            }\n            ctx.stroke();\n\n            // 给一个格子上色\n            function fillGrid(x, y, color) {\n                ctx.fillStyle = color || \"#666\";\n                ctx.fillRect(x * _constant.gridWidth + 1, y * _constant.gridHeight + 1, _constant.gridWidth - 2, _constant.gridHeight - 2);\n            }\n\n            ctx.restore();\n        }\n    }]);\n\n    return Game;\n}();\n\nexports.default = Game;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Game.js\n// module id = 2\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nvec2.ceil = function (out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nvec2.floor = function (out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nvec2.round = function (out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.exactEquals = function (a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n};\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvec2.equals = function (a, b) {\n    var a0 = a[0], a1 = a[1];\n    var b0 = b[0], b1 = b[1];\n    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n};\n\nmodule.exports = vec2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.3.2@gl-matrix/src/gl-matrix/vec2.js\n// module id = 3\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Configuration Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\nglMatrix.ENABLE_SIMD = false;\n\n// Capability detection\nglMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);\nglMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    glMatrix.ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less \n * than or equal to 1.0, and a relative tolerance is used for larger values)\n * \n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nglMatrix.equals = function(a, b) {\n\treturn Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\nmodule.exports = glMatrix;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/.2.3.2@gl-matrix/src/gl-matrix/common.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vec = require('gl-matrix/src/gl-matrix/vec2');\n\nvar _vec2 = _interopRequireDefault(_vec);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Path = function Path(ctx) {\n    'use strict';\n\n    this.points = [];\n    this.radius = 0;\n\n    /**\r\n     * Add a point to path\r\n     */\n    this.addPoint = function (x, y) {\n        var point = _vec2.default.fromValues(x, y);\n        this.points.push(point);\n    };\n\n    /**\r\n     * Render path\r\n     */\n    this.display = function () {\n        ctx.lineJoin = 'round';\n        ctx.strokeStyle = '#151515';\n        ctx.lineWidth = this.radius * 2;\n        ctx.fillStyle = \"red\";\n        ctx.shadowBlur = 0;\n        ctx.beginPath();\n        for (var i = 0; i < this.points.length; i++) {\n            ctx.lineTo(this.points[i][0], this.points[i][1]);\n        }\n\n        // ctx.closePath();\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.fillStyle = '#151515';\n        ctx.arc(this.points[0][0], this.points[0][1], this.radius, 0.5 * Math.PI, 1.5 * Math.PI, false);\n        ctx.fill();\n\n        // Draw a line in the middle of the path\n        ctx.strokeStyle = '#233333';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        for (i = 0; i < this.points.length; i++) {\n            ctx.lineTo(this.points[i][0], this.points[i][1]);\n        }\n        // ctx.closePath();\n        ctx.stroke();\n    };\n};\n\nexports.default = Path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Entity/Path.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _vec = require('gl-matrix/src/gl-matrix/vec2');\n\nvar _vec2 = _interopRequireDefault(_vec);\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The \"Vehicle\" class\nfunction Vehicle(location, mass, ctx) {\n    'use strict';\n\n    var predict = _vec2.default.create();\n    var dir = _vec2.default.create();\n    var a = _vec2.default.create();\n    var b = _vec2.default.create();\n    var ap = _vec2.default.create();\n    var ab = _vec2.default.create();\n    var clonea = _vec2.default.create();\n    var predictLoc = _vec2.default.create();\n    var accelerationVec = _vec2.default.fromValues(0, 0);\n    var steerVec = _vec2.default.create();\n    var diffVec = _vec2.default.create();\n\n    this.location = location;\n    this.mass = mass;\n    this.maxspeed = 5 / this.mass;\n    this.maxforce = 1 / 5;\n    this.radius = this.mass * 1.5;\n    this.acceleration = _vec2.default.create();\n    this.velocity = _vec2.default.fromValues(this.maxspeed, 0);\n\n    this.hue = Math.random() * 360;\n\n    this.dead = false;\n\n    this.applyBehaviors = function (vehicles, path) {\n        var f = this.follow(path);\n        var s = this.separate(vehicles);\n\n        // Scale up forces to produce stronger impact\n        _vec2.default.scale(f, f, 2); // f = f * 2\n        _vec2.default.scale(s, s, 4); // s = s * 4\n\n        // Calculate the average force\n        var forces = _vec2.default.add(_vec2.default.create(), f, s);\n        _vec2.default.scale(forces, forces, 1 / this.mass); // divide force by its mass\n\n        // Apply force\n        this.applyForce(forces);\n    };\n\n    /**\r\n     * Apply force on the vehicle\r\n     */\n    this.applyForce = function (force) {\n        _vec2.default.add(this.acceleration, this.acceleration, force);\n    };\n\n    /**\r\n     * Run Vehicle loop\r\n     */\n    this.run = function () {\n        this.update();\n        this.borders();\n        this.render();\n    };\n\n    /**\r\n     * Implement Craig Reynolds' path following algorithm\r\n     */\n    this.follow = function (path) {\n\n        // Predict future location\n        predict.set(this.velocity);\n\n        _vec2.default.normalize(predict, predict);\n        _vec2.default.scale(predict, predict, 25);\n\n        predictLoc.set([0, 0]);\n        _vec2.default.add(predictLoc, predict, this.location);\n\n        // Define things\n        var target = null;\n        // Will be updated with shortest distance to path. Start with a very high value.\n        var worldRecord = 1000000;\n\n        // Loop through each point of the path\n        for (var i = 0, len = path.points.length; i < len; i++) {\n\n            // Get current and next point of the path\n            a.set(path.points[i]);\n            b.set(path.points[(i + 1) % path.points.length]);\n\n            // Calculate a normal point\n            var normalPoint = this.getNormalPoint(predictLoc, a, b);\n\n            // Calculate direction towards the next point\n            dir.set(b);\n            _vec2.default.sub(dir, dir, a);\n\n            // Set a normal point to the end of the current path segment and recalculate direction if the vehicle is not within it\n            if (normalPoint[0] < Math.min(a[0], b[0]) || normalPoint[0] > Math.max(a[0], b[0]) || normalPoint[1] < Math.min(a[1], b[1]) || normalPoint[1] > Math.max(a[1], b[1])) {\n\n                normalPoint.set(b);\n                a.set(path.points[(i + 1) % path.points.length]);\n                b.set(path.points[(i + 2) % path.points.length]);\n\n                dir.set(b);\n                _vec2.default.sub(dir, dir, a);\n            }\n\n            // Get a distance between future location and normal point\n            var d = _vec2.default.dist(predictLoc, normalPoint);\n\n            // Calculate steering target for current path segment if the vehicle is going in segment direction\n            if (d < worldRecord) {\n                worldRecord = d;\n                target = normalPoint;\n\n                _vec2.default.normalize(dir, dir);\n                _vec2.default.scale(dir, dir, 25);\n                _vec2.default.add(target, target, dir);\n            }\n        }\n\n        // Steer if the vehicle is out of the 1/5 of the path's radius\n        if (worldRecord > path.radius / 5) {\n            return this.seek(target);\n        } else {\n            return _vec2.default.fromValues(0, 0);\n        }\n    };\n\n    // Find normal point of the future location on current path segment\n    this.getNormalPoint = function (p, a, b) {\n        ap.set(p);\n        _vec2.default.sub(ap, ap, a);\n        ab.set(b);\n        _vec2.default.sub(ab, ab, a);\n\n        _vec2.default.normalize(ab, ab);\n        _vec2.default.scale(ab, ab, _vec2.default.dot(ap, ab));\n\n        clonea.set(a);\n\n        return _vec2.default.add(_vec2.default.create(), clonea, ab);\n    };\n\n    // Update vehicle's location\n    this.update = function () {\n        // New location = current location + (velocity + acceleration) limited by maximum speed\n        // Reset acceleration to avoid permanent increasing\n        _vec2.default.add(this.velocity, this.velocity, this.acceleration);\n        _vec2.default.limit(this.velocity, this.velocity, this.maxspeed);\n        _vec2.default.add(this.location, this.location, this.velocity);\n\n        accelerationVec.set([0, 0]);\n        this.acceleration = accelerationVec;\n    };\n\n    // Produce path following behavior\n    // @param {Array} target Point on the Path where vehicle is steering to\n    this.seek = function (target) {\n        _vec2.default.sub(target, target, this.location);\n        var steer;\n\n        _vec2.default.normalize(target, target);\n        _vec2.default.scale(target, target, this.maxspeed);\n\n        steer = target;\n\n        _vec2.default.sub(steer, steer, this.velocity);\n        _vec2.default.limit(steer, steer, this.maxforce);\n\n        return steer;\n    };\n\n    this.separate = function (boids) {\n        var desiredSepartion = this.radius * 2 + 2,\n            count = 0,\n            steer;\n\n        steerVec.set([0, 0]);\n        steer = steerVec;\n\n        // Loop through each vehicle\n        for (var i = 0, len = boids.length; i < len; i++) {\n            var other = boids[i],\n                d = this.location;\n\n            // Get distance between current and other vehicle\n            d = _vec2.default.dist(d, other.location);\n\n            if (d > 0 && d < desiredSepartion) {\n\n                // Point away from the vehicle\n                _vec2.default.sub(diffVec, this.location, other.location);\n\n                _vec2.default.normalize(diffVec, diffVec);\n\n                // The closer the other vehicle is, the more current one will flee\n                _vec2.default.scale(diffVec, diffVec, 1 / d);\n\n                _vec2.default.add(steer, steer, diffVec);\n\n                count++;\n            }\n        }\n\n        if (count > 0) {\n            _vec2.default.scale(steer, steer, 1 / count);\n        }\n        return steer;\n    };\n\n    this.borders = function () {\n        if (this.location[0] < -50) {\n            this.dead = true;\n        }\n    };\n\n    this.render = function () {\n        if (_config.config.renderShadow) {\n            ctx.shadowBlur = this.radius;\n            ctx.shadowColor = 'hsl(' + this.hue + ',100%,60%)';\n        }\n        // ctx.fillStyle = 'hsl(' + this.hue + ',100%,60%';\n        ctx.strokeStyle = 'hsl(' + this.hue + ',100%,80%';\n        ctx.lineWidth = Math.max(3, this.radius / 8);\n\n        ctx.beginPath();\n        ctx.arc(this.location[0], this.location[1], this.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        // ctx.fill();\n        ctx.stroke();\n    };\n}\n\nexports.default = Vehicle;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Entity/Vehicle.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar config = exports.config = {\n    renderShadow: false\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Bullet = require('./Bullet.js');\n\nvar _Bullet2 = _interopRequireDefault(_Bullet);\n\nvar _vec = require('gl-matrix/src/gl-matrix/vec2');\n\nvar _vec2 = _interopRequireDefault(_vec);\n\nvar _utils = require('../utils/utils');\n\nvar _config = require('../config');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleTower = function () {\n    function SimpleTower(ctx, x, y, bullets) {\n        _classCallCheck(this, SimpleTower);\n\n        this.x = x;\n        this.y = y;\n        this.radius = 12;\n        this.hue = 200;\n        this.bullets = bullets;\n        this.lastShootTime = new Date();\n        this.direction = 180; // 用度数表示的tower指向\n        this.bulletStartPosVec = _vec2.default.fromValues(0, 0);\n        this.directionVec = _vec2.default.create();\n    }\n\n    _createClass(SimpleTower, [{\n        key: 'draw',\n        value: function draw(ctx) {\n            // 将方向向量归一化\n            this.directionVec = _vec2.default.fromValues(Math.cos((0, _utils.toRadians)(this.direction)), Math.sin((0, _utils.toRadians)(this.direction)));\n            _vec2.default.normalize(this.directionVec, this.directionVec);\n\n            // bullet 出射位置\n\n            _vec2.default.scale(this.bulletStartPosVec, this.directionVec, 30);\n\n            ctx.save();\n            if (_config.config.renderShadow) {\n                ctx.shadowBlur = this.radius;\n                ctx.shadowColor = 'hsl(' + this.hue + ',100%,60%)';\n            }\n\n            ctx.strokeStyle = 'hsl(' + this.hue + ',100%,80%';\n            ctx.fillStyle = 'hsl(' + this.hue + ',100%,80%';\n            ctx.lineWidth = Math.max(3, this.radius / 8);\n\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.moveTo(this.x, this.y);\n            ctx.lineTo(this.x + this.bulletStartPosVec[0], this.y + this.bulletStartPosVec[1]);\n            ctx.stroke();\n            ctx.closePath();\n\n            if (new Date() - this.lastShootTime >= 400) {\n                this.shoot(ctx);\n                this.lastShootTime = new Date();\n            }\n\n            this.direction = (this.direction + 0.2) % 360;\n\n            ctx.restore();\n        }\n    }, {\n        key: 'shoot',\n\n\n        // 发射子弹\n        value: function shoot(ctx) {\n            this.bullets.push(new _Bullet2.default(ctx, this.x + this.bulletStartPosVec[0], this.y + this.bulletStartPosVec[1], this.directionVec));\n        }\n    }]);\n\n    return SimpleTower;\n}();\n\nexports.default = SimpleTower;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Entity/SimpleTower.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _vec = require('gl-matrix/src/gl-matrix/vec2');\n\nvar _vec2 = _interopRequireDefault(_vec);\n\nvar _utils = require('./../utils/utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bullet = function () {\n        function Bullet(ctx, x, y, directionVec) {\n                _classCallCheck(this, Bullet);\n\n                this.x = x;\n                this.y = y;\n                this.directionVec = directionVec;\n\n                // {vec2} this.start 表示起点位置的向量\n                this.start = _vec2.default.fromValues(x, y);\n\n                this.hue = 200;\n\n                // {vec2} this.velocity 表示bullet速度的向量\n                // 将表示方向的单位向量乘以速率，得到速度向量\n                this.velocity = _vec2.default.create();\n                _vec2.default.scale(this.velocity, directionVec, 2);\n\n                // bullet的长度\n                this.length = 10;\n                // 从bullet的起点指向终点的向量\n                this.bulletVec = _vec2.default.create();\n                _vec2.default.scale(this.bulletVec, directionVec, this.length);\n\n                // {vec2} this.end 表示终点位置的向量\n                this.end = _vec2.default.create();\n                this.end = _vec2.default.add(this.end, this.start, this.bulletVec);\n        }\n\n        _createClass(Bullet, [{\n                key: 'draw',\n                value: function draw(ctx) {\n                        // bullet运动后的起点和终点位置\n                        _vec2.default.add(this.start, this.start, this.velocity);\n                        _vec2.default.add(this.end, this.end, this.velocity);\n\n                        // 绘图开始\n                        ctx.save();\n                        ctx.strokeStyle = 'hsl(' + this.hue + ', 100%, 80%)';\n                        ctx.beginPath();\n                        ctx.moveTo(this.start[0], this.start[1]);\n                        ctx.lineTo(this.end[0], this.end[1]);\n                        ctx.stroke();\n                        ctx.restore();\n                }\n        }]);\n\n        return Bullet;\n}();\n\nexports.default = Bullet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Entity/Bullet.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.toRadians = toRadians;\nexports.calcuteDistance = calcuteDistance;\n\nvar _vec = require('gl-matrix/src/gl-matrix/vec2');\n\nvar _vec2 = _interopRequireDefault(_vec);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toRadians(angle) {\n    return angle * (Math.PI / 180);\n}\n\n// Array Remove - By John Resig (MIT Licensed)\nArray.prototype.remove = function (from, to) {\n    var rest = this.slice((to || from) + 1 || this.length);\n    this.length = from < 0 ? this.length + from : from;\n    return this.push.apply(this, rest);\n};\n\nfunction calcuteDistance(x1, y1, x2, y2) {\n    var result = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    return result;\n}\n\n// Make sure v is smaller than high\n_vec2.default.limit = function (out, v, high) {\n    'use strict';\n\n    var x = v[0],\n        y = v[1];\n\n    var len = x * x + y * y;\n\n    if (len > high * high && len > 0) {\n        out[0] = x;\n        out[1] = y;\n        _vec2.default.normalize(out, out);\n        _vec2.default.scale(out, out, high);\n    }\n    return out;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/utils.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar gridWidth = exports.gridWidth = 40;\nvar gridHeight = exports.gridHeight = gridWidth;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constant.js\n// module id = 11\n// module chunks = 0"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrhkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrrpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;;;","sourceRoot":""}